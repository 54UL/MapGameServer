<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.8.20" xml:lang="en-US">
  <compound refid="classtf_1_1ChromeObserver" kind="class"><name>tf::ChromeObserver</name>
    <member refid="classtf_1_1ChromeObserver_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1ChromeObserver_1aee57a7a03bb4af2aadd2fdefbebd9e7b" kind="variable"><name>_timeline</name></member>
    <member refid="classtf_1_1ChromeObserver_1a5df3852d8525cabafee696d5f77b3fd7" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1ChromeObserver_1a414d60cee91db1d3924636fcea5f4ea7" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1ChromeObserver_1a3948e57186155a6934c100447cb9332d" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1ChromeObserver_1a44032b7607de5dd929683739f4df9ef2" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1ChromeObserver_1aa8d5d9c3d0de7e7006d27079d8eb3888" kind="function"><name>set_up</name></member>
    <member refid="classtf_1_1ChromeObserver_1a6fa502ca5ef6bfb9d2168db190125855" kind="function"><name>on_entry</name></member>
    <member refid="classtf_1_1ChromeObserver_1a62ae8c50814d285d29e50a322461a803" kind="function"><name>on_exit</name></member>
  </compound>
  <compound refid="classtf_1_1CriticalSection" kind="class"><name>tf::CriticalSection</name>
    <member refid="classtf_1_1CriticalSection_1a64e16d9410b9a31e1f0e2c8bd562480f" kind="function"><name>CriticalSection</name></member>
    <member refid="classtf_1_1CriticalSection_1abf9cbde9354a06e0fee5fee2ea2bfc45" kind="function"><name>add</name></member>
  </compound>
  <compound refid="classtf_1_1cublasFlowCapturer" kind="class"><name>tf::cublasFlowCapturer</name>
    <member refid="classtf_1_1cublasFlowCapturer_1ad796516fe795c451719db8c4a1ac292b" kind="variable"><name>_handle</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1acd81da28696e8b1efb2bb45058a2f0e3" kind="function"><name>cublasFlowCapturer</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a2701b05226ef193e45482c1bb56f93de" kind="function"><name>native_handle</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a5e5d2a2502fcfe0094d5ac354995cb71" kind="function"><name>vset</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1af8f5052cbe1203d6ee3d3d40dffbb8eb" kind="function"><name>vget</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1ab1357bb1728f5fe526acef8afee7111e" kind="function"><name>amax</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a7a6485c37d50b9c79205f728ab380929" kind="function"><name>amin</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1ab7672cee3d219ccc75c48b62cf1d1bad" kind="function"><name>asum</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a56f8649d43652597da1c9b0a5f88b0ee" kind="function"><name>axpy</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1af315b411bcaa2bd2bc1436f7f2ca5e21" kind="function"><name>vcopy</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1afdfa01d9f277051e44d7ed9663555b52" kind="function"><name>dot</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a8000fc6dbbb6f6f5a033f1b365e80d38" kind="function"><name>nrm2</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1adb8f5d3137f5ccb3469a5bdde454a8bf" kind="function"><name>scal</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a32451b05fd7eb937ce8e807b5d5abe1f" kind="function"><name>swap</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a72185bf94321948b5b3657cc9c52ad0a" kind="function"><name>gemv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a3a492f3f22949e0e6b1058113eb475d0" kind="function"><name>c_gemv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1aed19fb69f2242f4ac6429f94d7776727" kind="function"><name>symv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a128ac1083f1dd05690998f5dac01959e" kind="function"><name>c_symv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a6765f845c7b95daefa197fdc2a1b426d" kind="function"><name>syr</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1afd79fe59e463b91feb2cbb94079c7c8c" kind="function"><name>c_syr</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a46443a7e6c36f2a0d655041f6227b544" kind="function"><name>syr2</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1ac3ebc265f36b4c1205360a055f197873" kind="function"><name>c_syr2</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1af0ff6efaa01bffbd20d2760b6f82bcb1" kind="function"><name>trmv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1adb57fd25e55f0b4e2f4f0045a169f8d9" kind="function"><name>c_trmv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a5f10c25901bff8c626235dfdd6d10b57" kind="function"><name>trsv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a27ae640e916e5f3d74886c57fe19342a" kind="function"><name>c_trsv</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a30b437e511b5719f6253d3a9cf0a992c" kind="function"><name>geam</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a756dc6637521ef4f2249711effd1d0f5" kind="function"><name>c_geam</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a8adbe06476f146b27bb00ba6054e5879" kind="function"><name>gemm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1aecfd3b623b457d277dca40c2e1b3c1c0" kind="function"><name>c_gemm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a56af0e8ed80e5626fe2f594608afa405" kind="function"><name>gemm_batched</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1aa9415957e3e48df65dc3baad86d05b38" kind="function"><name>c_gemm_batched</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a36ecdcea0f24575187e44374e583df2e" kind="function"><name>gemm_sbatched</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1ae57c53a1a07c0b4f73d90bf21fee4e1c" kind="function"><name>c_gemm_sbatched</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a9d0eb2c37b48120bd40b1f725b507c42" kind="function"><name>symm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a23a4636954cfdb34835b0d7a275fe4a8" kind="function"><name>c_symm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1aade5e9a358b7f4195367ef460921a236" kind="function"><name>syrk</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1af9b146e7a3d4afb6658fa5fd8a860527" kind="function"><name>c_syrk</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a45f110bd529b49531e3c83458a8990ac" kind="function"><name>syr2k</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1ab2f1c253b6808ac011b7ea9d2fc82e58" kind="function"><name>c_syr2k</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1af5461904ac5714c5cc7eb7bbd8e2883e" kind="function"><name>syrkx</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a18ef82f489aaaa80d3d3c7cde6750729" kind="function"><name>c_syrkx</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a11e49f148b84ebc95ddeb5f4c3af78d8" kind="function"><name>trmm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1ad9118a1eff03514a0c9f75e21e76fe35" kind="function"><name>c_trmm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1aa8cc2fcfeb3ffbc1146dda358b2b8188" kind="function"><name>trsm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1a7a0282cc21707315d347b5e4d8d3f25e" kind="function"><name>c_trsm</name></member>
    <member refid="classtf_1_1cublasFlowCapturer_1afa60d91ed10ca36aff546ac2fce2dd46" kind="function"><name>_stream</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlow" kind="class"><name>tf::cudaFlow</name>
    <member refid="classtf_1_1cudaFlow_1a424926b9d6ce538c8e6aa576cdb1583c" kind="typedef"><name>handle_t</name></member>
    <member refid="classtf_1_1cudaFlow_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1cudaFlow_1a3301611d9ecd3795ec58b045ea7327f6" kind="variable"><name>_handle</name></member>
    <member refid="classtf_1_1cudaFlow_1aa8b4d0cddb73fec80fd7ac2fd58cfefc" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1cudaFlow_1aa9f806b778db070e544686487bc88faf" kind="variable"><name>_executable</name></member>
    <member refid="classtf_1_1cudaFlow_1ad4c3e001db151486c8479151a2108d37" kind="function"><name>cudaFlow</name></member>
    <member refid="classtf_1_1cudaFlow_1a19eda378f8c0ef4495e08996f63f5144" kind="function"><name>~cudaFlow</name></member>
    <member refid="classtf_1_1cudaFlow_1a1926f45a038d8faa9c1b1ee43fd29a93" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1cudaFlow_1a7f97b68fa7c889db49b26aa71a46a7cf" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1cudaFlow_1a43507f21eb9cb77667ffe0ac7e6ae635" kind="function"><name>dump_native_graph</name></member>
    <member refid="classtf_1_1cudaFlow_1a30b2e107cb2c90a37f467b28d1b42a74" kind="function"><name>noop</name></member>
    <member refid="classtf_1_1cudaFlow_1a060e1c96111c2134ce0f896420a42cd0" kind="function"><name>host</name></member>
    <member refid="classtf_1_1cudaFlow_1adb731be71bdd436dfb5e36e6213a9a17" kind="function"><name>kernel</name></member>
    <member refid="classtf_1_1cudaFlow_1a4a839dbaa01237a440edfebe8faf4e5b" kind="function"><name>kernel_on</name></member>
    <member refid="classtf_1_1cudaFlow_1a079ca65da35301e5aafd45878a19e9d2" kind="function"><name>memset</name></member>
    <member refid="classtf_1_1cudaFlow_1ad37637606f0643f360e9eda1f9a6e559" kind="function"><name>memcpy</name></member>
    <member refid="classtf_1_1cudaFlow_1a40172fac4464f6d805f75921ea3c2a3b" kind="function"><name>zero</name></member>
    <member refid="classtf_1_1cudaFlow_1a21d4447bc834f4d3e1bb4772c850d090" kind="function"><name>fill</name></member>
    <member refid="classtf_1_1cudaFlow_1af03e04771b655f9e629eb4c22e19b19f" kind="function"><name>copy</name></member>
    <member refid="classtf_1_1cudaFlow_1a99358da15e3bdfa1faabb3e326130e1f" kind="function"><name>offload_until</name></member>
    <member refid="classtf_1_1cudaFlow_1ac2269fd7dc8ca04a294a718204703dad" kind="function"><name>offload_n</name></member>
    <member refid="classtf_1_1cudaFlow_1a85789ed8a1f47704cf1f1a2b98969444" kind="function"><name>offload</name></member>
    <member refid="classtf_1_1cudaFlow_1ac54401e49da65ce06669646546600755" kind="function"><name>update_host</name></member>
    <member refid="classtf_1_1cudaFlow_1abab3a11129e6286c1de3deecedae8090" kind="function"><name>update_kernel</name></member>
    <member refid="classtf_1_1cudaFlow_1a7972c77ba5f533b69e4b1dc55e87374d" kind="function"><name>update_copy</name></member>
    <member refid="classtf_1_1cudaFlow_1af5f4cd1fc858a7725bbf57db629bdc34" kind="function"><name>update_memcpy</name></member>
    <member refid="classtf_1_1cudaFlow_1a603072d44265de60647a7bcc5aaebace" kind="function"><name>update_memset</name></member>
    <member refid="classtf_1_1cudaFlow_1a4a319c3e47fc538f6c31a7317c6a17e0" kind="function"><name>update_fill</name></member>
    <member refid="classtf_1_1cudaFlow_1a62a042795e4a089ab633d809af6108a6" kind="function"><name>update_zero</name></member>
    <member refid="classtf_1_1cudaFlow_1a53927cca2d935fa7ab2b33e3d6b13dab" kind="function"><name>single_task</name></member>
    <member refid="classtf_1_1cudaFlow_1a97c248490dbde983378f757239eaed4a" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1cudaFlow_1ab5a7c12e383be4972844a9f29033e487" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1cudaFlow_1a552f2da29009113beee4ee90bc95ae65" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlow_1a5fcd6d7d183707c60f9ff888db2df964" kind="function"><name>reduce</name></member>
    <member refid="classtf_1_1cudaFlow_1a01b86cb5bc492bdb2ecb423692dc342e" kind="function"><name>uninitialized_reduce</name></member>
    <member refid="classtf_1_1cudaFlow_1a89c389fff64a16e5dd8c60875d3b514d" kind="function"><name>capture</name></member>
    <member refid="classtf_1_1cudaFlow_1a46c82c98d0fc7724394de77f4e3ecbce" kind="function"><name>cudaFlow</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlowCapturer" kind="class"><name>tf::cudaFlowCapturer</name>
    <member refid="classtf_1_1cudaFlowCapturer_1a9f64f729511a922781a59663ff1c6250" kind="friend"><name>cudaFlow</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a18b216ba712f8ad0e3d99efdfa8ac54d" kind="variable"><name>_capturers</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1ae1bb9c3841bf9ce8784dae4bddcda437" kind="variable"><name>_executable</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a3413a20a7c8229365e1ee9fb5af4af1e" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a49dd9727aeb5bccd7d826c6b11a6882d" kind="function"><name>make_capturer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a0ff3e4948c4861e62dd4ad52b88ba4ab" kind="function"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a2fde4fe15f2e1471e0c6b1eb9bf22b12" kind="function"><name>_capture</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlowCapturerBase" kind="class"><name>tf::cudaFlowCapturerBase</name>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a672b45d300c57d726c203c62f950efbd" kind="friend"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a20df5703896c8b581b6aa06417d79c70" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a43739b92f51358bd144270664c6fdf8e" kind="function"><name>cudaFlowCapturerBase</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a09d58616acdfe01dfe09271f8b3587ff" kind="function"><name>~cudaFlowCapturerBase</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1ad785ad88cdcb896903e9fdc845d30bea" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1afa4e61e31e202f222e0f508ce3d159fc" kind="function"><name>on</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a38adf66dfcc0829708db653d153a83e2" kind="function"><name>memcpy</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a9fd8983c782f841bba6b10de39becdf6" kind="function"><name>copy</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a8e3071171c0875c93dcc077a2e0a435a" kind="function"><name>memset</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1ad836d32cc2e9532ce57fe3ad6cc67d5d" kind="function"><name>kernel</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1ac25236625772a0a2c66831517b9ec288" kind="function"><name>single_task</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a583e4df1139cf6f20b6e79dfde977a51" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a0320596ee37d68cfce5746027ebc97de" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a44fb0c626c46de1bb95369e33194f5c7" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1aab12ff998a789efe0ad302bf86254f0d" kind="function"><name>reduce</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a407504f1295f5f658abfbee081a0b057" kind="function"><name>uninitialized_reduce</name></member>
    <member refid="classtf_1_1cudaFlowCapturerBase_1a61bd20a2dda9636e32947e861a4ef692" kind="function"><name>cudaFlowCapturerBase</name></member>
  </compound>
  <compound refid="classtf_1_1cudaScopedDevice" kind="class"><name>tf::cudaScopedDevice</name>
    <member refid="classtf_1_1cudaScopedDevice_1a350583393e3c5edb51543726ca659687" kind="variable"><name>_p</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1a03d75e2c0b084c8e926a00a922302653" kind="function"><name>cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1ad2c9212f42d80d1f7436bb52651006ee" kind="function"><name>~cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1a4315f5b72224a82ec8a7d6e5e2a45a7d" kind="function"><name>cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1ad15f7efad106ae6e8ba3ee5057a014f0" kind="function"><name>cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1a75ddad61a5ea8029bfc112a19d4a45dc" kind="function"><name>cudaScopedDevice</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory" kind="struct"><name>tf::cudaSharedMemory</name>
    <member refid="structtf_1_1cudaSharedMemory_1aa9107019c5f12fb26412b5c4ae0a39b1" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01bool_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; bool &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01bool_01_4_1a38d4dadcf0cf869a703005efb960bb51" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01char_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; char &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01char_01_4_1a54117307262fb62083bbc6f05792c0e6" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01double_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; double &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01double_01_4_1a83abd28e780449fc679ecca2cd1a58c5" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01float_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; float &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01float_01_4_1af276a91004948e6b218c2d215f04a0d3" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01int_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; int &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01int_01_4_1a15b5e0144d9984e1357bc57b0d32fa6b" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01long_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; long &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01long_01_4_1ae0ca4f3e5da97221e6fe0993b8e58cd4" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01short_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; short &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01short_01_4_1ab78cac0530b96bf84dd601d3973fd162" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01char_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned char &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01char_01_4_1a9971b377a2f62eeaefe23320403bf347" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01int_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned int &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01int_01_4_1a8663dc7588cf88c9c1ed7e28e832ecde" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01long_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned long &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01long_01_4_1abc39bfa1b0a82bc4c41b55191176b0bf" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01short_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned short &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01short_01_4_1ab0d92965dd5347008f751cae4149cd58" kind="function"><name>get</name></member>
  </compound>
  <compound refid="classtf_1_1cudaTask" kind="class"><name>tf::cudaTask</name>
    <member refid="classtf_1_1cudaTask_1a9f64f729511a922781a59663ff1c6250" kind="friend"><name>cudaFlow</name></member>
    <member refid="classtf_1_1cudaTask_1a672b45d300c57d726c203c62f950efbd" kind="friend"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaTask_1a8a72366cffc8beb57fb68b1591df56e4" kind="friend"><name>cudaFlowCapturerBase</name></member>
    <member refid="classtf_1_1cudaTask_1aa48fa98a827ff71f8c3845a29f5e4d10" kind="friend"><name>operator&lt;&lt;</name></member>
    <member refid="classtf_1_1cudaTask_1a7f77a40228b96cba9191c43ac6d851ad" kind="variable"><name>_node</name></member>
    <member refid="classtf_1_1cudaTask_1a68942b759c0420da99b639a8de3cc3d1" kind="function"><name>cudaTask</name></member>
    <member refid="classtf_1_1cudaTask_1a367cf46c1ea828de4502a2ddc805c094" kind="function"><name>cudaTask</name></member>
    <member refid="classtf_1_1cudaTask_1af17c570ca9a43ad71c4b626635ea9cbb" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1cudaTask_1abdd68287ec4dff4216af34d1db44d1b4" kind="function"><name>precede</name></member>
    <member refid="classtf_1_1cudaTask_1a4a9ca1a34bac47e4c9b04eb4fb2f7775" kind="function"><name>succeed</name></member>
    <member refid="classtf_1_1cudaTask_1ab81b4f71a44af8d61758524f0c274962" kind="function"><name>name</name></member>
    <member refid="classtf_1_1cudaTask_1aa80fb7a06b2828bd95c43fb465e10abe" kind="function"><name>name</name></member>
    <member refid="classtf_1_1cudaTask_1a581673ad83a48a2d3b4f06f125043c32" kind="function"><name>num_successors</name></member>
    <member refid="classtf_1_1cudaTask_1a1b0da9e643b80008063406fe1bf207b9" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1cudaTask_1a7eab02ec6633a5cf17cc15898db2d648" kind="function"><name>type</name></member>
    <member refid="classtf_1_1cudaTask_1af2ce580b0bfb771e463e66af64c2c571" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1cudaTask_1ada121035cb622722915be0cc860c9b29" kind="function"><name>cudaTask</name></member>
  </compound>
  <compound refid="structtf_1_1Taskflow_1_1Dumper" kind="struct"><name>tf::Taskflow::Dumper</name>
    <member refid="structtf_1_1Taskflow_1_1Dumper_1a4afcc893c96769e95776a56e5496ee8b" kind="variable"><name>stack</name></member>
    <member refid="structtf_1_1Taskflow_1_1Dumper_1af7db17945e4fd7ec4287f6b30c6d52f2" kind="variable"><name>visited</name></member>
  </compound>
  <compound refid="classtf_1_1Executor" kind="class"><name>tf::Executor</name>
    <member refid="classtf_1_1Executor_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Executor_1aa48945297ede77a161defc88033ce8a6" kind="friend"><name>Subflow</name></member>
    <member refid="classtf_1_1Executor_1a9f64f729511a922781a59663ff1c6250" kind="friend"><name>cudaFlow</name></member>
    <member refid="classtf_1_1Executor_1a6a07829c7fbbe077cbb78d7506e85db9" kind="variable"><name>_per_thread</name></member>
    <member refid="classtf_1_1Executor_1ab052ce8c698583f15216a89ba4c68da4" kind="variable"><name>_VICTIM_BEG</name></member>
    <member refid="classtf_1_1Executor_1a213d72f825c44fd8b158261214480ea3" kind="variable"><name>_VICTIM_END</name></member>
    <member refid="classtf_1_1Executor_1ac4a4632561a52d00a02d91296b20cb5a" kind="variable"><name>_MAX_STEALS</name></member>
    <member refid="classtf_1_1Executor_1ab79aeb0c97c27c176a3f1db1ad91bbaa" kind="variable"><name>_MAX_YIELDS</name></member>
    <member refid="classtf_1_1Executor_1a94357ea08db1859178f855b0b926b3de" kind="variable"><name>_topology_cv</name></member>
    <member refid="classtf_1_1Executor_1a8be5571fa0df99784aacb26b01d0f4b4" kind="variable"><name>_topology_mutex</name></member>
    <member refid="classtf_1_1Executor_1ad031630f03103157f807d85a174d08cb" kind="variable"><name>_wsq_mutex</name></member>
    <member refid="classtf_1_1Executor_1a9e38edfbc967dd3f5ca6f7a115f95ed7" kind="variable"><name>_num_topologies</name></member>
    <member refid="classtf_1_1Executor_1ad93162f032d463cc845fbca4fc0d960e" kind="variable"><name>_workers</name></member>
    <member refid="classtf_1_1Executor_1a3b5e7cf6749feded228a46e9fbfdef5f" kind="variable"><name>_threads</name></member>
    <member refid="classtf_1_1Executor_1ab92c39c4b59577cf4163c21ef2edb2f3" kind="variable"><name>_notifier</name></member>
    <member refid="classtf_1_1Executor_1a21685ee0442fbbd635e7134d6a0afe1c" kind="variable"><name>_wsq</name></member>
    <member refid="classtf_1_1Executor_1aa987e2bddb791a78ece4e5693f018afb" kind="variable"><name>_num_actives</name></member>
    <member refid="classtf_1_1Executor_1a904e5d4f22bf5a72bc0af2a4c5f32a3e" kind="variable"><name>_num_thieves</name></member>
    <member refid="classtf_1_1Executor_1a500d540a170f1da6e5247168bc6efa87" kind="variable"><name>_done</name></member>
    <member refid="classtf_1_1Executor_1ad7f083460df992b1186f83ac99481a57" kind="variable"><name>_observers</name></member>
    <member refid="classtf_1_1Executor_1a37cd9b9d923b07dad74d8443cb3b2d54" kind="variable"><name>_tfprof</name></member>
    <member refid="classtf_1_1Executor_1a4910e89d89146b6d563d598b795eb4a9" kind="function"><name>Executor</name></member>
    <member refid="classtf_1_1Executor_1a5a511b0cc23b264826373d3dabcef670" kind="function"><name>~Executor</name></member>
    <member refid="classtf_1_1Executor_1a81f35d5b0a20ac0646447eb80d97c0aa" kind="function"><name>run</name></member>
    <member refid="classtf_1_1Executor_1a94b45b69dc247c82c2ada8c90424b172" kind="function"><name>run</name></member>
    <member refid="classtf_1_1Executor_1adca6cd0ce1bd7e6fa2ed2a55c9ae15e6" kind="function"><name>run_n</name></member>
    <member refid="classtf_1_1Executor_1aff558312e64d19f98f26c91349c317da" kind="function"><name>run_n</name></member>
    <member refid="classtf_1_1Executor_1a8acf7515e8e8fdda366ace68bcd65aa6" kind="function"><name>run_until</name></member>
    <member refid="classtf_1_1Executor_1a85f5cd590d2dbe15d1f2f1f8d920a7e6" kind="function"><name>run_until</name></member>
    <member refid="classtf_1_1Executor_1ab9aa252f70e9a40020a1e5a89d485b85" kind="function"><name>wait_for_all</name></member>
    <member refid="classtf_1_1Executor_1a79223c7f32c9d715e725b8d775de2d29" kind="function"><name>num_workers</name></member>
    <member refid="classtf_1_1Executor_1a6d6c28ed58211e4c27a99571e5bf0b6c" kind="function"><name>num_topologies</name></member>
    <member refid="classtf_1_1Executor_1a6487d589cb1f6b078b69fd3bb1082345" kind="function"><name>this_worker_id</name></member>
    <member refid="classtf_1_1Executor_1a1e6866c8f1b6a2e932f06d0b4eb032c0" kind="function"><name>async</name></member>
    <member refid="classtf_1_1Executor_1abf71e7ec0026ddfce79c912264369bc9" kind="function"><name>silent_async</name></member>
    <member refid="classtf_1_1Executor_1aff77def96ae740d648dd84e571237c83" kind="function"><name>make_observer</name></member>
    <member refid="classtf_1_1Executor_1a31081f492c376f7b798de0e430534531" kind="function"><name>remove_observer</name></member>
    <member refid="classtf_1_1Executor_1ab92083be20ea77b9fb3eb8ea2d26af68" kind="function"><name>num_observers</name></member>
    <member refid="classtf_1_1Executor_1a57f5105dc812d83f259ec8cab7c96228" kind="function"><name>_wait_for_task</name></member>
    <member refid="classtf_1_1Executor_1a078146af1cc8decfd7df9fcf3b45c0d1" kind="function"><name>_instantiate_tfprof</name></member>
    <member refid="classtf_1_1Executor_1a7701d8e40dfcbc6b74c44c5d6c0c4d61" kind="function"><name>_flush_tfprof</name></member>
    <member refid="classtf_1_1Executor_1ae023614977a19def9e04cf7212eab65b" kind="function"><name>_observer_prologue</name></member>
    <member refid="classtf_1_1Executor_1a9cd8c1a72af4477bc0f9575b68ffb16a" kind="function"><name>_observer_epilogue</name></member>
    <member refid="classtf_1_1Executor_1a8aee6c0ec55b4bfb3909601203e98514" kind="function"><name>_spawn</name></member>
    <member refid="classtf_1_1Executor_1a8615d8b666bc94e2007f2a1561767895" kind="function"><name>_worker_loop</name></member>
    <member refid="classtf_1_1Executor_1a0b4f231e11016194980b14e76262c8a7" kind="function"><name>_exploit_task</name></member>
    <member refid="classtf_1_1Executor_1aab7cc2e53d75fcc87fcc919f29bf9ca9" kind="function"><name>_explore_task</name></member>
    <member refid="classtf_1_1Executor_1a685c08b62a494359e34c6de2a700fdab" kind="function"><name>_schedule</name></member>
    <member refid="classtf_1_1Executor_1a8b28e234949b06adad56b2c4c4c01d1e" kind="function"><name>_schedule</name></member>
    <member refid="classtf_1_1Executor_1ad16165142908aca9444ea88e65040219" kind="function"><name>_invoke</name></member>
    <member refid="classtf_1_1Executor_1ac243d2a08b5a4a75dd440dc063b886ce" kind="function"><name>_invoke_static_task</name></member>
    <member refid="classtf_1_1Executor_1a4a000baf70b108201e3787787309c272" kind="function"><name>_invoke_dynamic_task</name></member>
    <member refid="classtf_1_1Executor_1a1714817bb86c97a78e7efa149cc5058e" kind="function"><name>_invoke_dynamic_task_internal</name></member>
    <member refid="classtf_1_1Executor_1a073460c4398c8be36cefc890370239c1" kind="function"><name>_invoke_dynamic_task_external</name></member>
    <member refid="classtf_1_1Executor_1ad2b0401c6102db1f3f638132a6529427" kind="function"><name>_invoke_condition_task</name></member>
    <member refid="classtf_1_1Executor_1a4c5324657bf02bc2da0294192ab80233" kind="function"><name>_invoke_module_task</name></member>
    <member refid="classtf_1_1Executor_1a505ccafa7ab1855c200d5590499adf5a" kind="function"><name>_invoke_async_task</name></member>
    <member refid="classtf_1_1Executor_1a086b6cfc6a5c57dedcdb35e72c5c2386" kind="function"><name>_set_up_topology</name></member>
    <member refid="classtf_1_1Executor_1aac98be37af843c4ce0c2e56a0c8560e5" kind="function"><name>_tear_down_topology</name></member>
    <member refid="classtf_1_1Executor_1ab85dc42b3e9b18e4b975bd5e9a8c5e72" kind="function"><name>_increment_topology</name></member>
    <member refid="classtf_1_1Executor_1a8728f22f6d177fad84ce667e02a7a3b9" kind="function"><name>_decrement_topology</name></member>
    <member refid="classtf_1_1Executor_1a08945917285cd57d33efc99530fbd384" kind="function"><name>_decrement_topology_and_notify</name></member>
    <member refid="classtf_1_1Executor_1ae4be3b787a3c6eaaf18589a25e9c844f" kind="function"><name>_invoke_cudaflow_task</name></member>
    <member refid="classtf_1_1Executor_1a50c30b581f48331f2aa35af5cc9e135d" kind="function"><name>_invoke_cudaflow_task_entry</name></member>
    <member refid="classtf_1_1Executor_1a50c30b581f48331f2aa35af5cc9e135d" kind="function"><name>_invoke_cudaflow_task_entry</name></member>
  </compound>
  <compound refid="structtf_1_1cudaFlow_1_1External" kind="struct"><name>tf::cudaFlow::External</name>
    <member refid="structtf_1_1cudaFlow_1_1External_1add55ef590408418dee0c8b79db7a747b" kind="variable"><name>graph</name></member>
  </compound>
  <compound refid="classtf_1_1FlowBuilder" kind="class"><name>tf::FlowBuilder</name>
    <member refid="classtf_1_1FlowBuilder_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1FlowBuilder_1a9404a57d9d37a4d49d20b686e4e5f68f" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a1f6118326ad434f6c839007a1a79fe1b" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a0a01192f4f92c15380a4f259e2fec2d9" kind="function"><name>composed_of</name></member>
    <member refid="classtf_1_1FlowBuilder_1acab0b4ac82260f47fdb36a3244ee3aaf" kind="function"><name>placeholder</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1afdf47fd1a358fb64f8c1b89e2a393169" kind="function"><name>emplace_on</name></member>
    <member refid="classtf_1_1FlowBuilder_1a90f3d9b9d6fcf4df8e7d7878dfdd130d" kind="function"><name>linearize</name></member>
    <member refid="classtf_1_1FlowBuilder_1a4ec89b554d15ad5fb96f4fdb10dbbb16" kind="function"><name>linearize</name></member>
    <member refid="classtf_1_1FlowBuilder_1a564252001be679600b20ca9ed9920f6a" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1FlowBuilder_1a1a294c4fa23d74b82e581b8cfd33acdf" kind="function"><name>for_each_guided</name></member>
    <member refid="classtf_1_1FlowBuilder_1a5c044a80450742bf6927d0c343c23853" kind="function"><name>for_each_dynamic</name></member>
    <member refid="classtf_1_1FlowBuilder_1a0af7e250c4ad1ae98bf6e0249b98589f" kind="function"><name>for_each_static</name></member>
    <member refid="classtf_1_1FlowBuilder_1ab8417b211b18bb1e0f45a049331f084d" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1FlowBuilder_1a942449afd25e656b9e14cb526cbd8ad2" kind="function"><name>for_each_index_guided</name></member>
    <member refid="classtf_1_1FlowBuilder_1a930d0343226874d1d40b9e230cccdd52" kind="function"><name>for_each_index_dynamic</name></member>
    <member refid="classtf_1_1FlowBuilder_1a71f204c670ca5857e5527d6000ba73c4" kind="function"><name>for_each_index_static</name></member>
    <member refid="classtf_1_1FlowBuilder_1ad999cd75045db225a42d5881d6db1223" kind="function"><name>reduce</name></member>
    <member refid="classtf_1_1FlowBuilder_1a10f13b39b02038c6850aca787923d668" kind="function"><name>reduce_guided</name></member>
    <member refid="classtf_1_1FlowBuilder_1a83ec799606b7526787761acf27885b00" kind="function"><name>reduce_dynamic</name></member>
    <member refid="classtf_1_1FlowBuilder_1a54e36c916ae7dd88bd079d3fd49119f9" kind="function"><name>reduce_static</name></member>
    <member refid="classtf_1_1FlowBuilder_1ad8d03524f15292610ebee63d53b89579" kind="function"><name>transform_reduce</name></member>
    <member refid="classtf_1_1FlowBuilder_1aa102a40672a331643944cb17c2377118" kind="function"><name>transform_reduce_guided</name></member>
    <member refid="classtf_1_1FlowBuilder_1a562e253028680b61de95e305c0224d91" kind="function"><name>transform_reduce_static</name></member>
    <member refid="classtf_1_1FlowBuilder_1a6fb87774919f4a570ac505cdcda48249" kind="function"><name>transform_reduce_dynamic</name></member>
    <member refid="classtf_1_1FlowBuilder_1af4848ab51fa3bf5525af58e2440b01c1" kind="function"><name>sort</name></member>
    <member refid="classtf_1_1FlowBuilder_1a559afa5066782bc6c38738260e3d4c2e" kind="function"><name>sort</name></member>
    <member refid="classtf_1_1FlowBuilder_1a67d023d5493da1594a1d2eaea89da179" kind="function"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1FlowBuilder_1a04115519f61efc42d018ea697054135d" kind="function"><name>_linearize</name></member>
  </compound>
  <compound refid="structtf_1_1cudaFlow_1_1Internal" kind="struct"><name>tf::cudaFlow::Internal</name>
    <member refid="structtf_1_1cudaFlow_1_1Internal_1a699f86e6abe3d2aa41432898feb5f281" kind="variable"><name>executor</name></member>
    <member refid="structtf_1_1cudaFlow_1_1Internal_1a885341edb70e164ef4010de5346ec8f0" kind="function"><name>Internal</name></member>
  </compound>
  <compound refid="classtf_1_1ObserverInterface" kind="class"><name>tf::ObserverInterface</name>
    <member refid="classtf_1_1ObserverInterface_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1ObserverInterface_1adfd71c3af3ae2ea4f41eed26c1b6f604" kind="function"><name>~ObserverInterface</name></member>
    <member refid="classtf_1_1ObserverInterface_1a41e6e62f12bf9d9dc4fa74632f6825d9" kind="function"><name>set_up</name></member>
    <member refid="classtf_1_1ObserverInterface_1a3e3a9f7f1d43691794e487b8787b01a0" kind="function"><name>on_entry</name></member>
    <member refid="classtf_1_1ObserverInterface_1aa59a59a59eadd4eb6ba20ecdfcae882b" kind="function"><name>on_exit</name></member>
  </compound>
  <compound refid="structtf_1_1Executor_1_1PerThread" kind="struct"><name>tf::Executor::PerThread</name>
    <member refid="structtf_1_1Executor_1_1PerThread_1ad0b3f53bc3ba6574b1546d564926e1bb" kind="variable"><name>worker</name></member>
    <member refid="structtf_1_1Executor_1_1PerThread_1a4718570deca884f12df94c4c7b3dac78" kind="function"><name>PerThread</name></member>
  </compound>
  <compound refid="structtf_1_1ChromeObserver_1_1Segment" kind="struct"><name>tf::ChromeObserver::Segment</name>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1a8e3739d8a5b9be34851a6404f5916d95" kind="variable"><name>name</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1a419febef3c04d04c8cd16f765c5502bd" kind="variable"><name>beg</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1ad356de0724147aacfcf147843dc64d56" kind="variable"><name>end</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1a78d891a139eb18380d59f3e1e80df8bf" kind="function"><name>Segment</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1adc676da6e64aba54f82cda1b0b2276a5" kind="function"><name>Segment</name></member>
  </compound>
  <compound refid="structtf_1_1TFProfObserver_1_1Segment" kind="struct"><name>tf::TFProfObserver::Segment</name>
    <member refid="structtf_1_1TFProfObserver_1_1Segment_1a733331fa0941e4769377f0eda17f6184" kind="variable"><name>name</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Segment_1ae282cdfb6255516e3dbb157cc24f88e5" kind="variable"><name>type</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Segment_1a7fd084c9b777744ac36e9786e619855f" kind="variable"><name>beg</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Segment_1ae7f47c86c47a477db612e1aa88c0a543" kind="variable"><name>end</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Segment_1af0084d90c6850afb3aa6637d732fc064" kind="function"><name>Segment</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Segment_1a6e56461ff1959efe855dcef756d0dfff" kind="function"><name>Segment</name></member>
  </compound>
  <compound refid="classtf_1_1Semaphore" kind="class"><name>tf::Semaphore</name>
    <member refid="classtf_1_1Semaphore_1a6db9d28bd448a131448276ee03de1e6d" kind="friend"><name>Node</name></member>
    <member refid="classtf_1_1Semaphore_1a329424188b5287ca596f1af3f6db58f1" kind="variable"><name>_mtx</name></member>
    <member refid="classtf_1_1Semaphore_1a895f01222afdc86d9d475d0d9c15524b" kind="variable"><name>_counter</name></member>
    <member refid="classtf_1_1Semaphore_1ab05d171c0852d2c6584d62de004f52fb" kind="variable"><name>_waiters</name></member>
    <member refid="classtf_1_1Semaphore_1a383f31970a822941988f1641da914302" kind="function"><name>Semaphore</name></member>
    <member refid="classtf_1_1Semaphore_1ad6cad6f9cb643348adf27fc491c918ef" kind="function"><name>count</name></member>
    <member refid="classtf_1_1Semaphore_1aeb12ad1db7794e13829a0a62549d157b" kind="function"><name>_try_acquire_or_wait</name></member>
    <member refid="classtf_1_1Semaphore_1a47b8ed63d5deecb0878a0b9cc99da20e" kind="function"><name>_release</name></member>
  </compound>
  <compound refid="classtf_1_1Subflow" kind="class"><name>tf::Subflow</name>
    <member refid="classtf_1_1Subflow_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Subflow_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Subflow_1a31a68355e05081fed16fff307b6b4e33" kind="variable"><name>_executor</name></member>
    <member refid="classtf_1_1Subflow_1a350edd619ad0a3f28c8373b4ee937ebe" kind="variable"><name>_parent</name></member>
    <member refid="classtf_1_1Subflow_1ac8db48417a0777f3c00257689dc63695" kind="variable"><name>_joinable</name></member>
    <member refid="classtf_1_1Subflow_1a59fcac1323e70d920088dd37bd0be245" kind="function"><name>join</name></member>
    <member refid="classtf_1_1Subflow_1acfdedc7e9676126e9a38ecf7b5a37864" kind="function"><name>detach</name></member>
    <member refid="classtf_1_1Subflow_1a4c4b56476ca907ceca75dd8a861e1145" kind="function"><name>joinable</name></member>
    <member refid="classtf_1_1Subflow_1a70681068507b224a96df69cc1f3168f1" kind="function"><name>async</name></member>
    <member refid="classtf_1_1Subflow_1af9671aa8548882b3425e5a1f10f7a868" kind="function"><name>silent_async</name></member>
    <member refid="classtf_1_1Subflow_1ad1cffe2b2c8139bb37dee5a7afd88347" kind="function"><name>Subflow</name></member>
  </compound>
  <compound refid="classtf_1_1Task" kind="class"><name>tf::Task</name>
    <member refid="classtf_1_1Task_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Task_1af043dd6f6a359602805d9c7dd7539cca" kind="friend"><name>Taskflow</name></member>
    <member refid="classtf_1_1Task_1a0aa0e12e4a0ba023033e808fb2132fdf" kind="friend"><name>TaskView</name></member>
    <member refid="classtf_1_1Task_1abff81069222d0f449e0b43136aea2f05" kind="variable"><name>_node</name></member>
    <member refid="classtf_1_1Task_1a5ed7ba63e8eeaa0f21fe08c80aa474ba" kind="function"><name>Task</name></member>
    <member refid="classtf_1_1Task_1a53deffe60d7c758df4265aeb81063928" kind="function"><name>Task</name></member>
    <member refid="classtf_1_1Task_1aebdcc47e47a119f261daab673a971458" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Task_1a4b0e3d6a1985a353626c15970c51c820" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Task_1ad87bb498b0a4eae0c375bc59b66dbba8" kind="function"><name>operator==</name></member>
    <member refid="classtf_1_1Task_1af4e13636e3a494297b30c2b2e483f095" kind="function"><name>operator!=</name></member>
    <member refid="classtf_1_1Task_1a08ada0425b490997b6ff7f310107e5e3" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Task_1a1a0afc89e8a6a416c511e74d82df135d" kind="function"><name>num_successors</name></member>
    <member refid="classtf_1_1Task_1a974dc1d738b62b829ad261beeafbd67c" kind="function"><name>num_dependents</name></member>
    <member refid="classtf_1_1Task_1ad49a92e8858c3c298bed0215e341b66b" kind="function"><name>num_strong_dependents</name></member>
    <member refid="classtf_1_1Task_1af3bf886291af7f39957d43d17083fe07" kind="function"><name>num_weak_dependents</name></member>
    <member refid="classtf_1_1Task_1a9057ecd0f3833b717480e914f8568f02" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Task_1a2f6f4cec42d016e5eb89390f362ffe99" kind="function"><name>work</name></member>
    <member refid="classtf_1_1Task_1ac5278492a4d43a191b321eee60e7d629" kind="function"><name>composed_of</name></member>
    <member refid="classtf_1_1Task_1a8c78c453295a553c1c016e4062da8588" kind="function"><name>precede</name></member>
    <member refid="classtf_1_1Task_1a331b1b726555072e7c7d10941257f664" kind="function"><name>succeed</name></member>
    <member refid="classtf_1_1Task_1a26709523eb112f2d024f4c0e9d2f0019" kind="function"><name>release</name></member>
    <member refid="classtf_1_1Task_1a076ab9c6f3a0346e16cfb5fee7dc4ce8" kind="function"><name>acquire</name></member>
    <member refid="classtf_1_1Task_1a302f51ed717d0a4e99edc50f92a571f3" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1Task_1aec3ab712e12137542b7e4bc311ee9f20" kind="function"><name>reset_work</name></member>
    <member refid="classtf_1_1Task_1a8149edcf9ec2bfac18dd171f7a55ce06" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1Task_1afc4ecb89dd4e4645b3ec3fb7c1bb0ec5" kind="function"><name>has_work</name></member>
    <member refid="classtf_1_1Task_1aff13a503d4a3c994eb08cb6f22e1b427" kind="function"><name>for_each_successor</name></member>
    <member refid="classtf_1_1Task_1a3bf68937662bf291637e4a763476b2e4" kind="function"><name>for_each_dependent</name></member>
    <member refid="classtf_1_1Task_1a1c9301f2a330cc23ee18e8f61688141f" kind="function"><name>hash_value</name></member>
    <member refid="classtf_1_1Task_1af2df95e6c8c5870c033d692e88af0bc2" kind="function"><name>type</name></member>
    <member refid="classtf_1_1Task_1a3318a49ff9d0a01cd1e8ee675251e3b7" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1Task_1a43d108a6cc0417cc470a00b5e95a65f5" kind="function"><name>Task</name></member>
  </compound>
  <compound refid="classtf_1_1Taskflow" kind="class"><name>tf::Taskflow</name>
    <member refid="classtf_1_1Taskflow_1acd2b8699ab7559c0da687cd775e2c778" kind="friend"><name>Topology</name></member>
    <member refid="classtf_1_1Taskflow_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Taskflow_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Taskflow_1a5f4243689c241ccb5ca4316211d21a62" kind="variable"><name>_name</name></member>
    <member refid="classtf_1_1Taskflow_1a78a7df50a7d2aeacb7c5c6948f5dd94a" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1Taskflow_1ad586987506faac6758bcdc6399e4e835" kind="variable"><name>_mtx</name></member>
    <member refid="classtf_1_1Taskflow_1acc7859e706bff76049b719f201d7941c" kind="variable"><name>_topologies</name></member>
    <member refid="classtf_1_1Taskflow_1a7242a74dcb16731b4e40816647b93305" kind="function"><name>Taskflow</name></member>
    <member refid="classtf_1_1Taskflow_1ade7fc641d136a3f8c96682c08040626a" kind="function"><name>Taskflow</name></member>
    <member refid="classtf_1_1Taskflow_1ac433018262e44b12c4cc9f0c4748d758" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1Taskflow_1a9c4900da1831dce708664a06b3e3a3fb" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1Taskflow_1af4f03bca084deb5c2228ac8936d33649" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1Taskflow_1a224301842d94c44fd7fe99d8ac2ba241" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1Taskflow_1ad5706e5819aa01a63c4aa2e3485546b9" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Taskflow_1a911edd95acc1322433bddfcfeaf2ccb0" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Taskflow_1a1f00bbe72a1553c9656ecae4d98bb9af" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1Taskflow_1a6350d0d6653ae9ae7b94c35e42fffe07" kind="function"><name>for_each_task</name></member>
    <member refid="classtf_1_1Taskflow_1acceeeb821b579c557b3251a72ab244cc" kind="function"><name>_dump</name></member>
    <member refid="classtf_1_1Taskflow_1a22bd6faed11509c504c4a9cb8cb81fd6" kind="function"><name>_dump</name></member>
    <member refid="classtf_1_1Taskflow_1a10a181b318ed9abe65f4a5dd0a4d556a" kind="function"><name>_dump</name></member>
  </compound>
  <compound refid="classtf_1_1TaskView" kind="class"><name>tf::TaskView</name>
    <member refid="classtf_1_1TaskView_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1TaskView_1a05d718be8be0374448b570276709bedb" kind="variable"><name>_node</name></member>
    <member refid="classtf_1_1TaskView_1ac8cd58171de8ab4865e3c3f142db2db1" kind="function"><name>name</name></member>
    <member refid="classtf_1_1TaskView_1aff16d269ac75cffa55a312593f20d30d" kind="function"><name>num_successors</name></member>
    <member refid="classtf_1_1TaskView_1acc4e2bef464e8fbb5706cefdf482a24f" kind="function"><name>num_dependents</name></member>
    <member refid="classtf_1_1TaskView_1ac7bcb9cb1ee8f020de56fdbf8e651388" kind="function"><name>num_strong_dependents</name></member>
    <member refid="classtf_1_1TaskView_1ad1ddd9a7e68a81feee1785ece99e58f5" kind="function"><name>num_weak_dependents</name></member>
    <member refid="classtf_1_1TaskView_1a3cb647dc0064b5d11e0c87226c47f8f8" kind="function"><name>for_each_successor</name></member>
    <member refid="classtf_1_1TaskView_1a55651e26436bfc2499cadaca4a24e48d" kind="function"><name>for_each_dependent</name></member>
    <member refid="classtf_1_1TaskView_1aa20d7b5796064c3ab194e6d7ebe2adb1" kind="function"><name>type</name></member>
    <member refid="classtf_1_1TaskView_1ad19afa391850d49513c4280439fc50ee" kind="function"><name>TaskView</name></member>
    <member refid="classtf_1_1TaskView_1ae85861fa894c206e800a9e5d4ee45cbf" kind="function"><name>TaskView</name></member>
  </compound>
  <compound refid="classtf_1_1TFProfObserver" kind="class"><name>tf::TFProfObserver</name>
    <member refid="classtf_1_1TFProfObserver_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1TFProfObserver_1a38776d45d5d762b56c28c034d71170a9" kind="variable"><name>_timeline</name></member>
    <member refid="classtf_1_1TFProfObserver_1a689ea7d2a99d23b46d9d0fe29c90c2ec" kind="variable"><name>_uuid</name></member>
    <member refid="classtf_1_1TFProfObserver_1a9f1e839e2a8d3abd0b91ac454f0d078b" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1TFProfObserver_1a59e82cb3f9b0ada38aa1ddea14f14d02" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1TFProfObserver_1a5e1f63034a96a5a79cef6da412efd203" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1TFProfObserver_1a8b3b0bee8762af654cfebd2bb2ee98ed" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1TFProfObserver_1aa030d8154dd03aea3b8fa8ce42e1151b" kind="function"><name>set_up</name></member>
    <member refid="classtf_1_1TFProfObserver_1a5debfce27f7e012d22872c134b261c63" kind="function"><name>on_entry</name></member>
    <member refid="classtf_1_1TFProfObserver_1af3a1630b5b1db5341a239a5d4c12c891" kind="function"><name>on_exit</name></member>
  </compound>
  <compound refid="structtf_1_1TFProfObserver_1_1Timeline" kind="struct"><name>tf::TFProfObserver::Timeline</name>
    <member refid="structtf_1_1TFProfObserver_1_1Timeline_1a3320fbeeb400c9cdcff91f69f120e4c9" kind="variable"><name>origin</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Timeline_1a1738a7ba6a218a3a9434f8623e6361de" kind="variable"><name>segments</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Timeline_1a137f922e5b5bbbd501b46f75a112f5f3" kind="variable"><name>stacks</name></member>
  </compound>
  <compound refid="structtf_1_1ChromeObserver_1_1Timeline" kind="struct"><name>tf::ChromeObserver::Timeline</name>
    <member refid="structtf_1_1ChromeObserver_1_1Timeline_1a1e13b185df12152589abaceead57979c" kind="variable"><name>origin</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Timeline_1a68e28885dc55ee0c4a910efb8e89919e" kind="variable"><name>segments</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Timeline_1a77e174ff85f9b0a0dce2688d160bad85" kind="variable"><name>stacks</name></member>
  </compound>
  <compound refid="structtf_1_1Worker" kind="struct"><name>tf::Worker</name>
    <member refid="structtf_1_1Worker_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="structtf_1_1Worker_1a0f36eeb628ab3803180651682f5821f3" kind="friend"><name>WorkerView</name></member>
    <member refid="structtf_1_1Worker_1af88d0e613ae0edd8ab5dba95b48a91f6" kind="variable"><name>id</name></member>
    <member refid="structtf_1_1Worker_1a267d680b8b68254db14aea8254311bb9" kind="variable"><name>vtm</name></member>
    <member refid="structtf_1_1Worker_1a5b0603992927b351e534fb6dec200172" kind="variable"><name>executor</name></member>
    <member refid="structtf_1_1Worker_1a3d29700ee379fefb6cfb96a0354e2301" kind="variable"><name>waiter</name></member>
    <member refid="structtf_1_1Worker_1a3602f343b074832f9e575d964163627f" kind="variable"><name>rdgen</name></member>
    <member refid="structtf_1_1Worker_1adaec69d6f991dd2b27ca984f87c5c8ed" kind="variable"><name>wsq</name></member>
  </compound>
  <compound refid="classtf_1_1WorkerView" kind="class"><name>tf::WorkerView</name>
    <member refid="classtf_1_1WorkerView_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1WorkerView_1ad4df9bf3972a4fe4253fd27477f51808" kind="variable"><name>_worker</name></member>
    <member refid="classtf_1_1WorkerView_1ab12c901b0bd8a9f1fa33d305a32ae259" kind="function"><name>id</name></member>
    <member refid="classtf_1_1WorkerView_1afb99c27c8224732921fadb98ceff42e4" kind="function"><name>queue_size</name></member>
    <member refid="classtf_1_1WorkerView_1aed408a9cbf65b0598fa27cd75d9b915e" kind="function"><name>queue_capacity</name></member>
    <member refid="classtf_1_1WorkerView_1af5023cb4d6b24fab8992310741952bea" kind="function"><name>WorkerView</name></member>
    <member refid="classtf_1_1WorkerView_1a4b39c214f3cd23c241faa56f4c94042f" kind="function"><name>WorkerView</name></member>
  </compound>
  <compound refid="namespacestd" kind="namespace"><name>std</name>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_and_explicit</name></member>
    <member refid="cpp/atomic/atomic_fetch_xor_1" kind="function"><name>atomic_fetch_xor_explicit</name></member>
    <member refid="cpp/error/set_unexpected_1" kind="function"><name>set_unexpected</name></member>
    <member refid="cpp/io/c/fputs_1" kind="function"><name>fputs</name></member>
    <member refid="cpp/numeric/math/modf_1" kind="function"><name>modf</name></member>
    <member refid="cpp/utility/functional/not2_1" kind="function"><name>not2</name></member>
    <member refid="cpp/string/byte/strlen_1" kind="function"><name>strlen</name></member>
    <member refid="cpp/numeric/math/exp2_1" kind="function"><name>exp2</name></member>
    <member refid="cpp/io/manip/setiosflags_1" kind="function"><name>setiosflags</name></member>
    <member refid="cpp/algorithm/adjacent_difference_1" kind="function"><name>adjacent_difference</name></member>
    <member refid="cpp/numeric/math/cos_1" kind="function"><name>cos</name></member>
    <member refid="cpp/io/c/fwscanf_1" kind="function"><name>fwscanf</name></member>
    <member refid="cpp/atomic/atomic_init_1" kind="function"><name>atomic_init</name></member>
    <member refid="cpp/utility/tuple/forward_as_tuple_1" kind="function"><name>forward_as_tuple</name></member>
    <member refid="cpp/utility/program/abort_1" kind="function"><name>abort</name></member>
    <member refid="cpp/string/wide/wcsncmp_1" kind="function"><name>wcsncmp</name></member>
    <member refid="cpp/algorithm/set_intersection_1" kind="function"><name>set_intersection</name></member>
    <member refid="cpp/atomic/atomic_signal_fence_1" kind="function"><name>atomic_signal_fence</name></member>
    <member refid="cpp/numeric/math/abs_1" kind="function"><name>llabs</name></member>
    <member refid="cpp/iterator/make_move_iterator_1" kind="function"><name>make_move_iterator</name></member>
    <member refid="cpp/io/c/fscanf_1" kind="function"><name>scanf</name></member>
    <member refid="cpp/numeric/math/nextafter_1" kind="function"><name>nextafter</name></member>
    <member refid="cpp/string/basic_string/stol_1" kind="function"><name>stol</name></member>
    <member refid="cpp/string/byte/strcspn_1" kind="function"><name>strcspn</name></member>
    <member refid="cpp/io/c/ungetwc_1" kind="function"><name>ungetwc</name></member>
    <member refid="cpp/algorithm/transform_1" kind="function"><name>transform</name></member>
    <member refid="cpp/io/c/fputc_1" kind="function"><name>putc</name></member>
    <member refid="cpp/string/wide/iswdigit_1" kind="function"><name>iswdigit</name></member>
    <member refid="cpp/numeric/math/rint_1" kind="function"><name>rint</name></member>
    <member refid="cpp/string/byte/memset_1" kind="function"><name>memset</name></member>
    <member refid="cpp/string/byte/isgraph_1" kind="function"><name>isgraph</name></member>
    <member refid="cpp/algorithm/replace_copy_1" kind="function"><name>replace_copy_if</name></member>
    <member refid="cpp/numeric/math/scalbn_1" kind="function"><name>scalbn</name></member>
    <member refid="cpp/algorithm/partial_sort_copy_1" kind="function"><name>partial_sort_copy</name></member>
    <member refid="cpp/error/make_exception_ptr_1" kind="function"><name>make_exception_ptr</name></member>
    <member refid="cpp/numeric/math/frexp_1" kind="function"><name>frexp</name></member>
    <member refid="cpp/string/byte/isxdigit_1" kind="function"><name>isxdigit</name></member>
    <member refid="cpp/atomic/atomic_exchange_1" kind="function"><name>atomic_exchange_explicit</name></member>
    <member refid="cpp/io/c/fwprintf_1" kind="function"><name>wprintf</name></member>
    <member refid="cpp/numeric/math/fdim_1" kind="function"><name>fdim</name></member>
    <member refid="cpp/string/wide/wctype_1" kind="function"><name>wctype</name></member>
    <member refid="cpp/string/multibyte/mbrtoc32_1" kind="function"><name>mbrtoc32</name></member>
    <member refid="cpp/io/manip/setw_1" kind="function"><name>setw</name></member>
    <member refid="cpp/memory/get_temporary_buffer_1" kind="function"><name>get_temporary_buffer</name></member>
    <member refid="cpp/numeric/math/fmax_1" kind="function"><name>fmax</name></member>
    <member refid="cpp/atomic/atomic_thread_fence_1" kind="function"><name>atomic_thread_fence</name></member>
    <member refid="cpp/atomic/atomic_exchange_1" kind="function"><name>atomic_exchange</name></member>
    <member refid="cpp/io/c/fgetwc_1" kind="function"><name>fgetwc</name></member>
    <member refid="cpp/io/c/fwprintf_1" kind="function"><name>swprintf</name></member>
    <member refid="cpp/algorithm/prev_permutation_1" kind="function"><name>prev_permutation</name></member>
    <member refid="cpp/algorithm/max_element_1" kind="function"><name>max_element</name></member>
    <member refid="cpp/algorithm/set_symmetric_difference_1" kind="function"><name>set_symmetric_difference</name></member>
    <member refid="cpp/string/wide/wcscpy_1" kind="function"><name>wcscpy</name></member>
    <member refid="cpp/memory/shared_ptr/pointer_cast_1" kind="function"><name>const_pointer_cast</name></member>
    <member refid="cpp/algorithm/minmax_element_1" kind="function"><name>minmax_element</name></member>
    <member refid="cpp/string/wide/wcstok_1" kind="function"><name>wcstok</name></member>
    <member refid="cpp/utility/functional/ref_1" kind="function"><name>ref</name></member>
    <member refid="cpp/numeric/fenv/feupdateenv_1" kind="function"><name>feupdateenv</name></member>
    <member refid="cpp/io/manip/endl_1" kind="function"><name>endl</name></member>
    <member refid="cpp/iterator/end_1" kind="function"><name>end</name></member>
    <member refid="cpp/string/wide/wmemmove_1" kind="function"><name>wmemmove</name></member>
    <member refid="cpp/numeric/math/fmin_1" kind="function"><name>fmin</name></member>
    <member refid="cpp/memory/uninitialized_fill_n_1" kind="function"><name>uninitialized_fill_n</name></member>
    <member refid="cpp/io/manip/uppercase_1" kind="function"><name>nouppercase</name></member>
    <member refid="cpp/io/manip/showpos_1" kind="function"><name>noshowpos</name></member>
    <member refid="cpp/chrono/c/ctime_1" kind="function"><name>ctime</name></member>
    <member refid="cpp/string/wide/wmemset_1" kind="function"><name>wmemset</name></member>
    <member refid="cpp/string/wide/iswpunct_1" kind="function"><name>iswpunct</name></member>
    <member refid="cpp/algorithm/pop_heap_1" kind="function"><name>pop_heap</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>sprintf</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>fixed</name></member>
    <member refid="cpp/memory/shared_ptr/make_shared_1" kind="function"><name>make_shared</name></member>
    <member refid="cpp/algorithm/make_heap_1" kind="function"><name>make_heap</name></member>
    <member refid="cpp/numeric/math/fmod_1" kind="function"><name>fmod</name></member>
    <member refid="cpp/string/byte/atoi_1" kind="function"><name>atol</name></member>
    <member refid="cpp/memory/uninitialized_copy_1" kind="function"><name>uninitialized_copy</name></member>
    <member refid="cpp/memory/shared_ptr/pointer_cast_1" kind="function"><name>dynamic_pointer_cast</name></member>
    <member refid="cpp/algorithm/set_union_1" kind="function"><name>set_union</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>hexfloat</name></member>
    <member refid="cpp/io/c/vfwprintf_1" kind="function"><name>vswprintf</name></member>
    <member refid="cpp/chrono/c/asctime_1" kind="function"><name>asctime</name></member>
    <member refid="cpp/string/wide/iswspace_1" kind="function"><name>iswspace</name></member>
    <member refid="cpp/numeric/math/nan_1" kind="function"><name>nan</name></member>
    <member refid="cpp/algorithm/sort_1" kind="function"><name>sort</name></member>
    <member refid="cpp/utility/program/quick_exit_1" kind="function"><name>quick_exit</name></member>
    <member refid="cpp/numeric/math/log10_1" kind="function"><name>log10</name></member>
    <member refid="cpp/string/multibyte/mbstowcs_1" kind="function"><name>mbstowcs</name></member>
    <member refid="cpp/string/byte/isspace_1" kind="function"><name>isspace</name></member>
    <member refid="cpp/string/byte/strncat_1" kind="function"><name>strncat</name></member>
    <member refid="cpp/numeric/math/isinf_1" kind="function"><name>isinf</name></member>
    <member refid="cpp/string/byte/atof_1" kind="function"><name>atof</name></member>
    <member refid="cpp/numeric/math/erf_1" kind="function"><name>erf</name></member>
    <member refid="cpp/algorithm/is_sorted_until_1" kind="function"><name>is_sorted_until</name></member>
    <member refid="cpp/numeric/math/cbrt_1" kind="function"><name>cbrt</name></member>
    <member refid="cpp/numeric/math/log1p_1" kind="function"><name>log1p</name></member>
    <member refid="cpp/memory/return_temporary_buffer_1" kind="function"><name>return_temporary_buffer</name></member>
    <member refid="cpp/string/multibyte/mbsrtowcs_1" kind="function"><name>mbsrtowcs</name></member>
    <member refid="cpp/numeric/fenv/feraiseexcept_1" kind="function"><name>feraiseexcept</name></member>
    <member refid="cpp/io/c/fseek_1" kind="function"><name>fseek</name></member>
    <member refid="cpp/atomic/atomic_fetch_or_1" kind="function"><name>atomic_fetch_or_explicit</name></member>
    <member refid="cpp/numeric/math/log_1" kind="function"><name>log</name></member>
    <member refid="cpp/io/c/putchar_1" kind="function"><name>putchar</name></member>
    <member refid="cpp/utility/tuple/make_tuple_1" kind="function"><name>make_tuple</name></member>
    <member refid="cpp/numeric/math/expm1_1" kind="function"><name>expm1</name></member>
    <member refid="cpp/numeric/math/fma_1" kind="function"><name>fma</name></member>
    <member refid="cpp/algorithm/remove_copy_1" kind="function"><name>remove_copy_if</name></member>
    <member refid="cpp/io/manip/showpoint_1" kind="function"><name>showpoint</name></member>
    <member refid="cpp/io/c/fscanf_1" kind="function"><name>fscanf</name></member>
    <member refid="cpp/algorithm/stable_partition_1" kind="function"><name>stable_partition</name></member>
    <member refid="cpp/algorithm/fill_n_1" kind="function"><name>fill_n</name></member>
    <member refid="cpp/algorithm/remove_copy_1" kind="function"><name>remove_copy</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_strong_explicit</name></member>
    <member refid="cpp/string/multibyte/wctomb_1" kind="function"><name>wctomb</name></member>
    <member refid="cpp/io/c/fgets_1" kind="function"><name>fgets</name></member>
    <member refid="cpp/numeric/math/remainder_1" kind="function"><name>remainder</name></member>
    <member refid="cpp/memory/shared_ptr/allocate_shared_1" kind="function"><name>allocate_shared</name></member>
    <member refid="cpp/algorithm/unique_1" kind="function"><name>unique</name></member>
    <member refid="cpp/algorithm/includes_1" kind="function"><name>includes</name></member>
    <member refid="cpp/string/wide/iswalnum_1" kind="function"><name>iswalnum</name></member>
    <member refid="cpp/utility/program/exit_1" kind="function"><name>exit</name></member>
    <member refid="cpp/io/manip/put_time_1" kind="function"><name>put_time</name></member>
    <member refid="cpp/string/basic_string/to_string_1" kind="function"><name>to_string</name></member>
    <member refid="cpp/algorithm/is_heap_until_1" kind="function"><name>is_heap_until</name></member>
    <member refid="cpp/string/wide/wcstof_1" kind="function"><name>wcstold</name></member>
    <member refid="cpp/string/basic_string/stof_1" kind="function"><name>stold</name></member>
    <member refid="cpp/io/c/ftell_1" kind="function"><name>ftell</name></member>
    <member refid="cpp/algorithm/copy_backward_1" kind="function"><name>copy_backward</name></member>
    <member refid="cpp/string/wide/wcstol_1" kind="function"><name>wcstoll</name></member>
    <member refid="cpp/io/c/perror_1" kind="function"><name>perror</name></member>
    <member refid="cpp/io/c/vfwscanf_1" kind="function"><name>vwscanf</name></member>
    <member refid="cpp/algorithm/stable_sort_1" kind="function"><name>stable_sort</name></member>
    <member refid="cpp/error/generic_category_1" kind="function"><name>generic_category</name></member>
    <member refid="cpp/numeric/math/abs_1" kind="function"><name>abs(int)</name></member>
    <member refid="cpp/io/c/fgetws_1" kind="function"><name>fgetws</name></member>
    <member refid="cpp/io/manip/showpos_1" kind="function"><name>showpos</name></member>
    <member refid="cpp/numeric/math/exp_1" kind="function"><name>exp</name></member>
    <member refid="cpp/algorithm/fill_1" kind="function"><name>fill</name></member>
    <member refid="cpp/string/byte/isalpha_1" kind="function"><name>isalpha</name></member>
    <member refid="cpp/numeric/math/lgamma_1" kind="function"><name>lgamma</name></member>
    <member refid="cpp/numeric/fenv/feclearexcept_1" kind="function"><name>feclearexcept</name></member>
    <member refid="cpp/string/wide/wcsncpy_1" kind="function"><name>wcsncpy</name></member>
    <member refid="cpp/memory/gc/undeclare_reachable_1" kind="function"><name>undeclare_reachable</name></member>
    <member refid="cpp/io/manip/hex_1" kind="function"><name>oct</name></member>
    <member refid="cpp/string/byte/strspn_1" kind="function"><name>strspn</name></member>
    <member refid="cpp/memory/c/realloc_1" kind="function"><name>realloc</name></member>
    <member refid="cpp/algorithm/copy_1" kind="function"><name>copy</name></member>
    <member refid="cpp/algorithm/binary_search_1" kind="function"><name>binary_search</name></member>
    <member refid="cpp/error/system_category_1" kind="function"><name>system_category</name></member>
    <member refid="cpp/string/multibyte/mbrtowc_1" kind="function"><name>mbrtowc</name></member>
    <member refid="cpp/string/byte/strtof_1" kind="function"><name>strtof</name></member>
    <member refid="cpp/utility/functional/mem_fn_1" kind="function"><name>mem_fn</name></member>
    <member refid="cpp/iterator/distance_1" kind="function"><name>distance</name></member>
    <member refid="cpp/thread/lock_1" kind="function"><name>lock</name></member>
    <member refid="cpp/string/byte/strcmp_1" kind="function"><name>strcmp</name></member>
    <member refid="cpp/io/c/tmpfile_1" kind="function"><name>tmpfile</name></member>
    <member refid="cpp/numeric/math/hypot_1" kind="function"><name>hypot</name></member>
    <member refid="cpp/utility/program/getenv_1" kind="function"><name>getenv</name></member>
    <member refid="cpp/string/byte/strrchr_1" kind="function"><name>strrchr</name></member>
    <member refid="cpp/algorithm/count_1" kind="function"><name>count</name></member>
    <member refid="cpp/numeric/math/tan_1" kind="function"><name>tan</name></member>
    <member refid="cpp/chrono/c/strftime_1" kind="function"><name>strftime</name></member>
    <member refid="cpp/string/basic_string/stof_1" kind="function"><name>stod</name></member>
    <member refid="cpp/string/wide/towupper_1" kind="function"><name>towupper</name></member>
    <member refid="cpp/string/byte/atoi_1" kind="function"><name>atoll</name></member>
    <member refid="cpp/atomic/atomic_store_1" kind="function"><name>atomic_store</name></member>
    <member refid="cpp/string/basic_string/stol_1" kind="function"><name>stoi</name></member>
    <member refid="cpp/error/rethrow_exception_1" kind="function"><name>rethrow_exception</name></member>
    <member refid="cpp/numeric/math/sin_1" kind="function"><name>sin</name></member>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_sub_explicit</name></member>
    <member refid="cpp/error/unexpected_1" kind="function"><name>unexpected</name></member>
    <member refid="cpp/string/multibyte/mbtowc_1" kind="function"><name>mbtowc</name></member>
    <member refid="cpp/io/manip/get_time_1" kind="function"><name>get_time</name></member>
    <member refid="cpp/algorithm/partition_1" kind="function"><name>partition</name></member>
    <member refid="cpp/iterator/next_1" kind="function"><name>next</name></member>
    <member refid="cpp/numeric/math/isfinite_1" kind="function"><name>isfinite</name></member>
    <member refid="cpp/io/manip/boolalpha_1" kind="function"><name>boolalpha</name></member>
    <member refid="cpp/numeric/fenv/fetestexcept_1" kind="function"><name>fetestexcept</name></member>
    <member refid="cpp/string/multibyte/mbrlen_1" kind="function"><name>mbrlen</name></member>
    <member refid="cpp/string/wide/iswgraph_1" kind="function"><name>iswgraph</name></member>
    <member refid="cpp/chrono/c/time_1" kind="function"><name>time</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_strong</name></member>
    <member refid="cpp/string/wide/wcschr_1" kind="function"><name>wcschr</name></member>
    <member refid="cpp/io/manip/uppercase_1" kind="function"><name>uppercase</name></member>
    <member refid="cpp/algorithm/lower_bound_1" kind="function"><name>lower_bound</name></member>
    <member refid="cpp/algorithm/copy_1" kind="function"><name>copy_if</name></member>
    <member refid="cpp/numeric/math/isnan_1" kind="function"><name>isnan</name></member>
    <member refid="cpp/locale/has_facet_1" kind="function"><name>has_facet</name></member>
    <member refid="cpp/atomic/kill_dependency_1" kind="function"><name>kill_dependency</name></member>
    <member refid="cpp/memory/uninitialized_copy_n_1" kind="function"><name>uninitialized_copy_n</name></member>
    <member refid="cpp/numeric/fenv/feholdexcept_1" kind="function"><name>feholdexcept</name></member>
    <member refid="cpp/numeric/math/div_1" kind="function"><name>div</name></member>
    <member refid="cpp/utility/program/at_quick_exit_1" kind="function"><name>at_quick_exit</name></member>
    <member refid="cpp/string/wide/wcspbrk_1" kind="function"><name>wcspbrk</name></member>
    <member refid="cpp/algorithm/search_1" kind="function"><name>search</name></member>
    <member refid="cpp/algorithm/find_first_of_1" kind="function"><name>find_first_of</name></member>
    <member refid="cpp/algorithm/iota_1" kind="function"><name>iota</name></member>
    <member refid="cpp/memory/gc/declare_reachable_1" kind="function"><name>declare_reachable</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_weak</name></member>
    <member refid="cpp/string/byte/strtof_1" kind="function"><name>strtod</name></member>
    <member refid="cpp/algorithm/accumulate_1" kind="function"><name>accumulate</name></member>
    <member refid="cpp/string/wide/wcsrchr_1" kind="function"><name>wcsrchr</name></member>
    <member refid="cpp/algorithm/min_element_1" kind="function"><name>min_element</name></member>
    <member refid="cpp/io/c/clearerr_1" kind="function"><name>clearerr</name></member>
    <member refid="cpp/algorithm/random_shuffle_1" kind="function"><name>random_shuffle</name></member>
    <member refid="cpp/string/wide/iswalpha_1" kind="function"><name>iswalpha</name></member>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_and</name></member>
    <member refid="cpp/string/wide/wmemchr_1" kind="function"><name>wmemchr</name></member>
    <member refid="cpp/algorithm/bsearch_1" kind="function"><name>bsearch</name></member>
    <member refid="cpp/numeric/math/ilogb_1" kind="function"><name>ilogb</name></member>
    <member refid="cpp/algorithm/unique_copy_1" kind="function"><name>unique_copy</name></member>
    <member refid="cpp/utility/program/_Exit_1" kind="function"><name>_Exit</name></member>
    <member refid="cpp/utility/move_1" kind="function"><name>move</name></member>
    <member refid="cpp/algorithm/find_end_1" kind="function"><name>find_end</name></member>
    <member refid="cpp/numeric/fenv/feexceptflag_1" kind="function"><name>fesetexceptflag</name></member>
    <member refid="cpp/algorithm/nth_element_1" kind="function"><name>nth_element</name></member>
    <member refid="cpp/io/c/gets_1" kind="function"><name>gets</name></member>
    <member refid="cpp/algorithm/lexicographical_compare_1" kind="function"><name>lexicographical_compare</name></member>
    <member refid="cpp/numeric/math/nearbyint_1" kind="function"><name>nearbyint</name></member>
    <member refid="cpp/string/byte/memcpy_1" kind="function"><name>memcpy</name></member>
    <member refid="cpp/io/c/fwrite_1" kind="function"><name>fwrite</name></member>
    <member refid="cpp/io/manip/unitbuf_1" kind="function"><name>unitbuf</name></member>
    <member refid="cpp/string/wide/iswlower_1" kind="function"><name>iswlower</name></member>
    <member refid="cpp/string/multibyte/mblen_1" kind="function"><name>mblen</name></member>
    <member refid="cpp/io/c/fwscanf_1" kind="function"><name>swscanf</name></member>
    <member refid="cpp/string/wide/wcstoimax_1" kind="function"><name>wcstoimax</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>fprintf</name></member>
    <member refid="cpp/algorithm/find_1" kind="function"><name>find_if</name></member>
    <member refid="cpp/string/byte/strtoimax_1" kind="function"><name>strtoimax</name></member>
    <member refid="cpp/string/byte/isalnum_1" kind="function"><name>isalnum</name></member>
    <member refid="cpp/atomic/atomic_fetch_add_1" kind="function"><name>atomic_fetch_add_explicit</name></member>
    <member refid="cpp/algorithm/push_heap_1" kind="function"><name>push_heap</name></member>
    <member refid="cpp/algorithm/min_1" kind="function"><name>min</name></member>
    <member refid="cpp/io/c/fwprintf_1" kind="function"><name>fwprintf</name></member>
    <member refid="cpp/error/uncaught_exception_1" kind="function"><name>uncaught_exception</name></member>
    <member refid="cpp/string/byte/strtol_1" kind="function"><name>strtoll</name></member>
    <member refid="cpp/error/throw_with_nested_1" kind="function"><name>throw_with_nested</name></member>
    <member refid="cpp/algorithm/random_shuffle_1" kind="function"><name>shuffle</name></member>
    <member refid="cpp/string/byte/isprint_1" kind="function"><name>isprint</name></member>
    <member refid="cpp/memory/new/get_new_handler_1" kind="function"><name>get_new_handler</name></member>
    <member refid="cpp/thread/call_once_1" kind="function"><name>call_once</name></member>
    <member refid="cpp/numeric/math/trunc_1" kind="function"><name>trunc</name></member>
    <member refid="cpp/string/wide/wcscspn_1" kind="function"><name>wcscspn</name></member>
    <member refid="cpp/string/multibyte/mbrtoc16_1" kind="function"><name>mbrtoc16</name></member>
    <member refid="cpp/numeric/math/round_1" kind="function"><name>lround</name></member>
    <member refid="cpp/numeric/math/pow_1" kind="function"><name>pow</name></member>
    <member refid="cpp/numeric/math/tgamma_1" kind="function"><name>tgamma</name></member>
    <member refid="cpp/numeric/math/erfc_1" kind="function"><name>erfc</name></member>
    <member refid="cpp/numeric/math/round_1" kind="function"><name>llround</name></member>
    <member refid="cpp/numeric/math/fabs_1" kind="function"><name>abs(float)</name></member>
    <member refid="cpp/numeric/math/asinh_1" kind="function"><name>asinh</name></member>
    <member refid="cpp/io/c/feof_1" kind="function"><name>feof</name></member>
    <member refid="cpp/io/manip/skipws_1" kind="function"><name>noskipws</name></member>
    <member refid="cpp/algorithm/find_1" kind="function"><name>find</name></member>
    <member refid="cpp/string/byte/atoi_1" kind="function"><name>atoi</name></member>
    <member refid="cpp/utility/functional/not1_1" kind="function"><name>not1</name></member>
    <member refid="cpp/io/c/vfscanf_1" kind="function"><name>vfscanf</name></member>
    <member refid="cpp/string/basic_string/stof_1" kind="function"><name>stof</name></member>
    <member refid="cpp/regex/regex_search_1" kind="function"><name>regex_search</name></member>
    <member refid="cpp/algorithm/rotate_copy_1" kind="function"><name>rotate_copy</name></member>
    <member refid="cpp/memory/new/set_new_handler_1" kind="function"><name>set_new_handler</name></member>
    <member refid="cpp/memory/gc/undeclare_no_pointers_1" kind="function"><name>undeclare_no_pointers</name></member>
    <member refid="cpp/thread/async_1" kind="function"><name>async</name></member>
    <member refid="cpp/algorithm/partition_point_1" kind="function"><name>partition_point</name></member>
    <member refid="cpp/io/c/vfscanf_1" kind="function"><name>vsscanf</name></member>
    <member refid="cpp/numeric/fenv/feround_1" kind="function"><name>fesetround</name></member>
    <member refid="cpp/atomic/atomic_is_lock_free_1" kind="function"><name>atomic_is_lock_free</name></member>
    <member refid="cpp/numeric/math/tanh_1" kind="function"><name>tanh</name></member>
    <member refid="cpp/numeric/math/div_1" kind="function"><name>ldiv</name></member>
    <member refid="cpp/io/manip/setbase_1" kind="function"><name>setbase</name></member>
    <member refid="cpp/algorithm/remove_1" kind="function"><name>remove</name></member>
    <member refid="cpp/string/byte/strtol_1" kind="function"><name>strtol</name></member>
    <member refid="cpp/string/byte/strpbrk_1" kind="function"><name>strpbrk</name></member>
    <member refid="cpp/numeric/math/signbit_1" kind="function"><name>signbit</name></member>
    <member refid="cpp/string/wide/wcsncat_1" kind="function"><name>wcsncat</name></member>
    <member refid="cpp/io/manip/get_money_1" kind="function"><name>get_money</name></member>
    <member refid="cpp/algorithm/set_difference_1" kind="function"><name>set_difference</name></member>
    <member refid="cpp/utility/functional/ref_1" kind="function"><name>cref</name></member>
    <member refid="cpp/string/basic_string/getline_1" kind="function"><name>getline</name></member>
    <member refid="cpp/string/basic_string/to_wstring_1" kind="function"><name>to_wstring</name></member>
    <member refid="cpp/utility/program/system_1" kind="function"><name>system</name></member>
    <member refid="cpp/memory/shared_ptr/pointer_cast_1" kind="function"><name>static_pointer_cast</name></member>
    <member refid="cpp/string/wide/wcstoimax_1" kind="function"><name>wcstoumax</name></member>
    <member refid="cpp/string/byte/memmove_1" kind="function"><name>memmove</name></member>
    <member refid="cpp/io/c/getwchar_1" kind="function"><name>getwchar</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>scientific</name></member>
    <member refid="cpp/chrono/c/wcsftime_1" kind="function"><name>wcsftime</name></member>
    <member refid="cpp/iterator/begin_1" kind="function"><name>begin</name></member>
    <member refid="cpp/numeric/math/ceil_1" kind="function"><name>ceil</name></member>
    <member refid="cpp/numeric/math/sinh_1" kind="function"><name>sinh</name></member>
    <member refid="cpp/algorithm/is_permutation_1" kind="function"><name>is_permutation</name></member>
    <member refid="cpp/algorithm/generate_n_1" kind="function"><name>generate_n</name></member>
    <member refid="cpp/numeric/math/acosh_1" kind="function"><name>acosh</name></member>
    <member refid="cpp/iterator/advance_1" kind="function"><name>advance</name></member>
    <member refid="cpp/io/manip/flush_1" kind="function"><name>flush</name></member>
    <member refid="cpp/atomic/atomic_fetch_xor_1" kind="function"><name>atomic_fetch_xor</name></member>
    <member refid="cpp/io/manip/ws_1" kind="function"><name>ws</name></member>
    <member refid="cpp/utility/program/signal_1" kind="function"><name>signal</name></member>
    <member refid="cpp/io/manip/showbase_1" kind="function"><name>noshowbase</name></member>
    <member refid="cpp/algorithm/generate_1" kind="function"><name>generate</name></member>
    <member refid="cpp/numeric/math/ldexp_1" kind="function"><name>ldexp</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vsnprintf</name></member>
    <member refid="cpp/algorithm/remove_1" kind="function"><name>remove_if</name></member>
    <member refid="cpp/string/basic_string/stoul_1" kind="function"><name>stoull</name></member>
    <member refid="cpp/numeric/fenv/feexceptflag_1" kind="function"><name>fegetexceptflag</name></member>
    <member refid="cpp/algorithm/find_1" kind="function"><name>find_if_not</name></member>
    <member refid="cpp/algorithm/merge_1" kind="function"><name>merge</name></member>
    <member refid="cpp/memory/c/free_1" kind="function"><name>free</name></member>
    <member refid="cpp/algorithm/count_1" kind="function"><name>count_if</name></member>
    <member refid="cpp/chrono/c/clock_1" kind="function"><name>clock</name></member>
    <member refid="cpp/chrono/c/mktime_1" kind="function"><name>mktime</name></member>
    <member refid="cpp/iterator/inserter_1" kind="function"><name>inserter</name></member>
    <member refid="cpp/io/c/puts_1" kind="function"><name>puts</name></member>
    <member refid="cpp/numeric/math/asin_1" kind="function"><name>asin</name></member>
    <member refid="cpp/string/byte/iscntrl_1" kind="function"><name>iscntrl</name></member>
    <member refid="cpp/chrono/c/difftime_1" kind="function"><name>difftime</name></member>
    <member refid="cpp/error/terminate_1" kind="function"><name>terminate</name></member>
    <member refid="cpp/string/byte/memcmp_1" kind="function"><name>memcmp</name></member>
    <member refid="cpp/memory/uninitialized_fill_1" kind="function"><name>uninitialized_fill</name></member>
    <member refid="cpp/io/manip/hex_1" kind="function"><name>hex</name></member>
    <member refid="cpp/utility/tuple/tie_1" kind="function"><name>tie</name></member>
    <member refid="cpp/iterator/back_inserter_1" kind="function"><name>back_inserter</name></member>
    <member refid="cpp/algorithm/upper_bound_1" kind="function"><name>upper_bound</name></member>
    <member refid="cpp/algorithm/adjacent_find_1" kind="function"><name>adjacent_find</name></member>
    <member refid="cpp/locale/use_facet_1" kind="function"><name>use_facet</name></member>
    <member refid="cpp/io/c/vfwprintf_1" kind="function"><name>vfwprintf</name></member>
    <member refid="cpp/atomic/atomic_fetch_add_1" kind="function"><name>atomic_fetch_add</name></member>
    <member refid="cpp/io/c/fsetpos_1" kind="function"><name>fsetpos</name></member>
    <member refid="cpp/memory/c/malloc_1" kind="function"><name>malloc</name></member>
    <member refid="cpp/chrono/c/localtime_1" kind="function"><name>localtime</name></member>
    <member refid="cpp/string/wide/wcscmp_1" kind="function"><name>wcscmp</name></member>
    <member refid="cpp/string/multibyte/c32rtomb_1" kind="function"><name>c32rtomb</name></member>
    <member refid="cpp/string/byte/isupper_1" kind="function"><name>isupper</name></member>
    <member refid="cpp/string/wide/wcstof_1" kind="function"><name>wcstod</name></member>
    <member refid="cpp/string/byte/tolower_1" kind="function"><name>tolower</name></member>
    <member refid="cpp/algorithm/sort_heap_1" kind="function"><name>sort_heap</name></member>
    <member refid="cpp/string/byte/isdigit_1" kind="function"><name>isdigit</name></member>
    <member refid="cpp/string/wide/wcslen_1" kind="function"><name>wcslen</name></member>
    <member refid="cpp/string/wide/wmemcmp_1" kind="function"><name>wmemcmp</name></member>
    <member refid="cpp/utility/move_if_noexcept_1" kind="function"><name>move_if_noexcept</name></member>
    <member refid="cpp/utility/declval_1" kind="function"><name>declval</name></member>
    <member refid="cpp/numeric/math/fpclassify_1" kind="function"><name>fpclassify</name></member>
    <member refid="cpp/string/wide/iswupper_1" kind="function"><name>iswupper</name></member>
    <member refid="cpp/numeric/random/rand_1" kind="function"><name>rand</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_weak_explicit</name></member>
    <member refid="cpp/algorithm/partial_sort_1" kind="function"><name>partial_sort</name></member>
    <member refid="cpp/numeric/math/rint_1" kind="function"><name>llrint</name></member>
    <member refid="cpp/io/c/fclose_1" kind="function"><name>fclose</name></member>
    <member refid="cpp/algorithm/reverse_1" kind="function"><name>reverse</name></member>
    <member refid="cpp/algorithm/partial_sum_1" kind="function"><name>partial_sum</name></member>
    <member refid="cpp/io/manip/showbase_1" kind="function"><name>showbase</name></member>
    <member refid="cpp/io/c/vfwscanf_1" kind="function"><name>vswscanf</name></member>
    <member refid="cpp/numeric/math/atan_1" kind="function"><name>atan</name></member>
    <member refid="cpp/numeric/math/atanh_1" kind="function"><name>atanh</name></member>
    <member refid="cpp/algorithm/iter_swap_1" kind="function"><name>iter_swap</name></member>
    <member refid="cpp/numeric/math/scalbn_1" kind="function"><name>scalbln</name></member>
    <member refid="cpp/algorithm/reverse_copy_1" kind="function"><name>reverse_copy</name></member>
    <member refid="cpp/utility/forward_1" kind="function"><name>forward</name></member>
    <member refid="cpp/io/c/fgetc_1" kind="function"><name>getc</name></member>
    <member refid="cpp/algorithm/equal_range_1" kind="function"><name>equal_range</name></member>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_sub</name></member>
    <member refid="cpp/algorithm/is_partitioned_1" kind="function"><name>is_partitioned</name></member>
    <member refid="cpp/algorithm/next_permutation_1" kind="function"><name>next_permutation</name></member>
    <member refid="cpp/string/byte/isblank_1" kind="function"><name>isblank</name></member>
    <member refid="cpp/io/manip/showpoint_1" kind="function"><name>noshowpoint</name></member>
    <member refid="cpp/numeric/math/atan2_1" kind="function"><name>atan2</name></member>
    <member refid="cpp/numeric/math/nan_1" kind="function"><name>nanf</name></member>
    <member refid="cpp/string/wide/towctrans_1" kind="function"><name>towctrans</name></member>
    <member refid="cpp/io/manip/left_1" kind="function"><name>right</name></member>
    <member refid="cpp/io/c/fputwc_1" kind="function"><name>fputwc</name></member>
    <member refid="cpp/string/byte/strtoul_1" kind="function"><name>strtoul</name></member>
    <member refid="cpp/algorithm/is_heap_1" kind="function"><name>is_heap</name></member>
    <member refid="cpp/io/c/fflush_1" kind="function"><name>fflush</name></member>
    <member refid="cpp/string/byte/strtoimax_1" kind="function"><name>strtoumax</name></member>
    <member refid="cpp/numeric/math/nextafter_1" kind="function"><name>nexttoward</name></member>
    <member refid="cpp/io/manip/unitbuf_1" kind="function"><name>nounitbuf</name></member>
    <member refid="cpp/string/byte/ispunct_1" kind="function"><name>ispunct</name></member>
    <member refid="cpp/io/manip/boolalpha_1" kind="function"><name>noboolalpha</name></member>
    <member refid="cpp/utility/pair/make_pair_1" kind="function"><name>make_pair</name></member>
    <member refid="cpp/string/wide/iswctype_1" kind="function"><name>iswctype</name></member>
    <member refid="cpp/numeric/random/srand_1" kind="function"><name>srand</name></member>
    <member refid="cpp/algorithm/replace_copy_1" kind="function"><name>replace_copy</name></member>
    <member refid="cpp/thread/future/future_category_1" kind="function"><name>future_category</name></member>
    <member refid="cpp/io/manip/resetiosflags_1" kind="function"><name>resetiosflags</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vprintf</name></member>
    <member refid="cpp/chrono/c/gmtime_1" kind="function"><name>gmtime</name></member>
    <member refid="cpp/memory/align_1" kind="function"><name>align</name></member>
    <member refid="cpp/utility/tuple/tuple_cat_1" kind="function"><name>tuple_cat</name></member>
    <member refid="cpp/io/manip/ends_1" kind="function"><name>ends</name></member>
    <member refid="cpp/error/set_terminate_1" kind="function"><name>set_terminate</name></member>
    <member refid="cpp/numeric/math/rint_1" kind="function"><name>lrint</name></member>
    <member refid="cpp/algorithm/all_any_none_of_1" kind="function"><name>none_of</name></member>
    <member refid="cpp/io/c/fwscanf_1" kind="function"><name>wscanf</name></member>
    <member refid="cpp/io/c/fputc_1" kind="function"><name>fputc</name></member>
    <member refid="cpp/io/manip/hex_1" kind="function"><name>dec</name></member>
    <member refid="cpp/string/byte/strcat_1" kind="function"><name>strcat</name></member>
    <member refid="cpp/utility/program/raise_1" kind="function"><name>raise</name></member>
    <member refid="cpp/string/wide/wcsspn_1" kind="function"><name>wcsspn</name></member>
    <member refid="cpp/numeric/math/fabs_1" kind="function"><name>fabs</name></member>
    <member refid="cpp/string/wide/wmemcpy_1" kind="function"><name>wmemcpy</name></member>
    <member refid="cpp/algorithm/copy_n_1" kind="function"><name>copy_n</name></member>
    <member refid="cpp/error/rethrow_if_nested_1" kind="function"><name>rethrow_if_nested</name></member>
    <member refid="cpp/locale/setlocale_1" kind="function"><name>setlocale</name></member>
    <member refid="cpp/memory/addressof_1" kind="function"><name>addressof</name></member>
    <member refid="cpp/memory/c/calloc_1" kind="function"><name>calloc</name></member>
    <member refid="cpp/string/byte/strerror_1" kind="function"><name>strerror</name></member>
    <member refid="cpp/string/byte/strcpy_1" kind="function"><name>strcpy</name></member>
    <member refid="cpp/string/wide/wcstoul_1" kind="function"><name>wcstoull</name></member>
    <member refid="cpp/string/multibyte/c16rtomb_1" kind="function"><name>c16rtomb</name></member>
    <member refid="cpp/numeric/random/generate_canonical_1" kind="function"><name>generate_canonical</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vfprintf</name></member>
    <member refid="cpp/thread/notify_all_at_thread_exit_1" kind="function"><name>notify_all_at_thread_exit</name></member>
    <member refid="cpp/algorithm/rotate_1" kind="function"><name>rotate</name></member>
    <member refid="cpp/error/current_exception_1" kind="function"><name>current_exception</name></member>
    <member refid="cpp/string/byte/strtok_1" kind="function"><name>strtok</name></member>
    <member refid="cpp/string/wide/wcscat_1" kind="function"><name>wcscat</name></member>
    <member refid="cpp/string/byte/strncpy_1" kind="function"><name>strncpy</name></member>
    <member refid="cpp/string/wide/towlower_1" kind="function"><name>towlower</name></member>
    <member refid="cpp/numeric/math/floor_1" kind="function"><name>floor</name></member>
    <member refid="cpp/io/manip/left_1" kind="function"><name>left</name></member>
    <member refid="cpp/io/c/ferror_1" kind="function"><name>ferror</name></member>
    <member refid="cpp/atomic/atomic_load_1" kind="function"><name>atomic_load_explicit</name></member>
    <member refid="cpp/algorithm/swap_1" kind="function"><name>swap</name></member>
    <member refid="cpp/numeric/math/acos_1" kind="function"><name>acos</name></member>
    <member refid="cpp/string/wide/wcscoll_1" kind="function"><name>wcscoll</name></member>
    <member refid="cpp/numeric/math/sqrt_1" kind="function"><name>sqrt</name></member>
    <member refid="cpp/string/multibyte/mbsinit_1" kind="function"><name>mbsinit</name></member>
    <member refid="cpp/algorithm/qsort_1" kind="function"><name>qsort</name></member>
    <member refid="cpp/string/basic_string/stol_1" kind="function"><name>stoll</name></member>
    <member refid="cpp/io/manip/put_money_1" kind="function"><name>put_money</name></member>
    <member refid="cpp/string/wide/wcstoul_1" kind="function"><name>wcstoul</name></member>
    <member refid="cpp/string/wide/wcstol_1" kind="function"><name>wcstol</name></member>
    <member refid="cpp/utility/program/atexit_1" kind="function"><name>atexit</name></member>
    <member refid="cpp/atomic/atomic_fetch_or_1" kind="function"><name>atomic_fetch_or</name></member>
    <member refid="cpp/io/c/rewind_1" kind="function"><name>rewind</name></member>
    <member refid="cpp/string/wide/wcsxfrm_1" kind="function"><name>wcsxfrm</name></member>
    <member refid="cpp/numeric/math/round_1" kind="function"><name>round</name></member>
    <member refid="cpp/io/c/vfwprintf_1" kind="function"><name>vwprintf</name></member>
    <member refid="cpp/algorithm/all_any_none_of_1" kind="function"><name>all_of</name></member>
    <member refid="cpp/algorithm/replace_1" kind="function"><name>replace</name></member>
    <member refid="cpp/numeric/math/remquo_1" kind="function"><name>remquo</name></member>
    <member refid="cpp/io/c/setbuf_1" kind="function"><name>setbuf</name></member>
    <member refid="cpp/string/byte/strncmp_1" kind="function"><name>strncmp</name></member>
    <member refid="cpp/locale/localeconv_1" kind="function"><name>localeconv</name></member>
    <member refid="cpp/string/wide/wctrans_1" kind="function"><name>wctrans</name></member>
    <member refid="cpp/algorithm/all_any_none_of_1" kind="function"><name>any_of</name></member>
    <member refid="cpp/algorithm/equal_1" kind="function"><name>equal</name></member>
    <member refid="cpp/algorithm/max_1" kind="function"><name>max</name></member>
    <member refid="cpp/string/byte/strxfrm_1" kind="function"><name>strxfrm</name></member>
    <member refid="cpp/string/wide/iswxdigit_1" kind="function"><name>iswxdigit</name></member>
    <member refid="cpp/numeric/math/abs_1" kind="function"><name>labs</name></member>
    <member refid="cpp/regex/regex_match_1" kind="function"><name>regex_match</name></member>
    <member refid="cpp/io/c/fputws_1" kind="function"><name>fputws</name></member>
    <member refid="cpp/string/multibyte/wcrtomb_1" kind="function"><name>wcrtomb</name></member>
    <member refid="cpp/io/manip/setprecision_1" kind="function"><name>setprecision</name></member>
    <member refid="cpp/io/c/setvbuf_1" kind="function"><name>setvbuf</name></member>
    <member refid="cpp/regex/regex_replace_1" kind="function"><name>regex_replace</name></member>
    <member refid="cpp/io/c/freopen_1" kind="function"><name>freopen</name></member>
    <member refid="cpp/numeric/math/logb_1" kind="function"><name>logb</name></member>
    <member refid="cpp/string/multibyte/wctob_1" kind="function"><name>wctob</name></member>
    <member refid="cpp/atomic/atomic_load_1" kind="function"><name>atomic_load</name></member>
    <member refid="cpp/algorithm/search_n_1" kind="function"><name>search_n</name></member>
    <member refid="cpp/string/byte/toupper_1" kind="function"><name>toupper</name></member>
    <member refid="cpp/algorithm/move_backward_1" kind="function"><name>move_backward</name></member>
    <member refid="cpp/algorithm/is_sorted_1" kind="function"><name>is_sorted</name></member>
    <member refid="cpp/string/byte/strtoul_1" kind="function"><name>strtoull</name></member>
    <member refid="cpp/string/wide/iswblank_1" kind="function"><name>iswblank</name></member>
    <member refid="cpp/memory/gc/get_pointer_safety_1" kind="function"><name>get_pointer_safety</name></member>
    <member refid="cpp/error/get_unexpected_1" kind="function"><name>get_unexpected</name></member>
    <member refid="cpp/io/c/fscanf_1" kind="function"><name>sscanf</name></member>
    <member refid="cpp/numeric/fenv/feenv_1" kind="function"><name>fesetenv</name></member>
    <member refid="cpp/atomic/atomic_store_1" kind="function"><name>atomic_store_explicit</name></member>
    <member refid="cpp/string/byte/strtof_1" kind="function"><name>strtold</name></member>
    <member refid="cpp/io/c/fread_1" kind="function"><name>fread</name></member>
    <member refid="cpp/string/byte/memchr_1" kind="function"><name>memchr</name></member>
    <member refid="cpp/string/multibyte/btowc_1" kind="function"><name>btowc</name></member>
    <member refid="cpp/algorithm/replace_1" kind="function"><name>replace_if</name></member>
    <member refid="cpp/string/byte/strcoll_1" kind="function"><name>strcoll</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vsprintf</name></member>
    <member refid="cpp/algorithm/mismatch_1" kind="function"><name>mismatch</name></member>
    <member refid="cpp/io/c/getchar_1" kind="function"><name>getchar</name></member>
    <member refid="cpp/string/byte/islower_1" kind="function"><name>islower</name></member>
    <member refid="cpp/io/c/tmpnam_1" kind="function"><name>tmpnam</name></member>
    <member refid="cpp/numeric/math/nan_1" kind="function"><name>nanl</name></member>
    <member refid="cpp/io/c/fopen_1" kind="function"><name>fopen</name></member>
    <member refid="cpp/algorithm/for_each_1" kind="function"><name>for_each</name></member>
    <member refid="cpp/numeric/fenv/feround_1" kind="function"><name>fegetround</name></member>
    <member refid="cpp/io/c/ungetc_1" kind="function"><name>ungetc</name></member>
    <member refid="cpp/io/manip/left_1" kind="function"><name>internal</name></member>
    <member refid="cpp/io/c/vfwscanf_1" kind="function"><name>vfwscanf</name></member>
    <member refid="cpp/io/c/fgetc_1" kind="function"><name>fgetc</name></member>
    <member refid="cpp/string/wide/wcstof_1" kind="function"><name>wcstof</name></member>
    <member refid="cpp/utility/functional/bind_1" kind="function"><name>bind</name></member>
    <member refid="cpp/io/manip/skipws_1" kind="function"><name>skipws</name></member>
    <member refid="cpp/string/wide/iswprint_1" kind="function"><name>iswprint</name></member>
    <member refid="cpp/string/multibyte/wcstombs_1" kind="function"><name>wcstombs</name></member>
    <member refid="cpp/algorithm/inplace_merge_1" kind="function"><name>inplace_merge</name></member>
    <member refid="cpp/numeric/math/copysign_1" kind="function"><name>copysign</name></member>
    <member refid="cpp/io/c/putwchar_1" kind="function"><name>putwchar</name></member>
    <member refid="cpp/string/wide/wcsstr_1" kind="function"><name>wcsstr</name></member>
    <member refid="cpp/numeric/fenv/feenv_1" kind="function"><name>fegetenv</name></member>
    <member refid="cpp/utility/program/longjmp_1" kind="function"><name>longjmp</name></member>
    <member refid="cpp/string/wide/iswcntrl_1" kind="function"><name>iswcntrl</name></member>
    <member refid="cpp/memory/gc/declare_no_pointers_1" kind="function"><name>declare_no_pointers</name></member>
    <member refid="cpp/numeric/math/isnormal_1" kind="function"><name>isnormal</name></member>
    <member refid="cpp/algorithm/swap_ranges_1" kind="function"><name>swap_ranges</name></member>
    <member refid="cpp/algorithm/minmax_1" kind="function"><name>minmax</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>defaultfloat</name></member>
    <member refid="cpp/io/c/rename_1" kind="function"><name>rename</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>snprintf</name></member>
    <member refid="cpp/thread/try_lock_1" kind="function"><name>try_lock</name></member>
    <member refid="cpp/string/basic_string/stoul_1" kind="function"><name>stoul</name></member>
    <member refid="cpp/io/c/fgetpos_1" kind="function"><name>fgetpos</name></member>
    <member refid="cpp/algorithm/partition_copy_1" kind="function"><name>partition_copy</name></member>
    <member refid="cpp/io/c/vfscanf_1" kind="function"><name>vscanf</name></member>
    <member refid="cpp/iterator/front_inserter_1" kind="function"><name>front_inserter</name></member>
    <member refid="cpp/error/get_terminate_1" kind="function"><name>get_terminate</name></member>
    <member refid="cpp/numeric/math/cosh_1" kind="function"><name>cosh</name></member>
    <member refid="cpp/iterator/prev_1" kind="function"><name>prev</name></member>
    <member refid="cpp/string/byte/strchr_1" kind="function"><name>strchr</name></member>
    <member refid="cpp/string/byte/strstr_1" kind="function"><name>strstr</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>printf</name></member>
    <member refid="cpp/io/manip/setfill_1" kind="function"><name>setfill</name></member>
    <member refid="cpp/algorithm/inner_product_1" kind="function"><name>inner_product</name></member>
  </compound>
  <compound refid="namespacetf" kind="namespace"><name>tf</name>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06f" kind="enum"><name>TaskType</name></member>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06faff7624cdd3bc3acecf4db831211120cb" kind="enumvalue"><name>PLACEHOLDER_TASK</name></member>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06faec4de0a757d10590110f320552c0811f" kind="enumvalue"><name>CUDAFLOW_TASK</name></member>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06fa819a61c1ac7a08cb4dedda31992b146e" kind="enumvalue"><name>STATIC_TASK</name></member>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06fa58271c98ba64c4324ee4ea6ae95c9054" kind="enumvalue"><name>DYNAMIC_TASK</name></member>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06fa5dc4f56336a81c251665b9cd46a2efd6" kind="enumvalue"><name>CONDITION_TASK</name></member>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06fa055307a1e8fabb808f64c39e4527aa2f" kind="enumvalue"><name>MODULE_TASK</name></member>
    <member refid="namespacetf_1a0681fa0518bdd3e3d198e1b1b744c06fa1e85afc1441ef240c50d4608d57236cf" kind="enumvalue"><name>ASYNC_TASK</name></member>
    <member refid="namespacetf_1a0b4825761897c52f8f7e8f0b6c219d1a" kind="enum"><name>ObserverType</name></member>
    <member refid="namespacetf_1a0b4825761897c52f8f7e8f0b6c219d1aa5a9fee7b05b17964502cd5f7730cb62e" kind="enumvalue"><name>TFPROF</name></member>
    <member refid="namespacetf_1a0b4825761897c52f8f7e8f0b6c219d1aaeb9e68a92dd2a6c466df87dbcbb9a167" kind="enumvalue"><name>CHROME</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8" kind="enum"><name>cudaTaskType</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8a19a6291214c2a3228e59a60cb7eab63a" kind="enumvalue"><name>CUDA_EMPTY_TASK</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8aa0305bd26260bedea85880413f3390b4" kind="enumvalue"><name>CUDA_HOST_TASK</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8a4934734274edc2e2eef735490964fbd5" kind="enumvalue"><name>CUDA_MEMSET_TASK</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8a240fd9c2eda4988c75d8d5f0e64bed69" kind="enumvalue"><name>CUDA_MEMCPY_TASK</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8a3ac59c1b13df906316fd0ad2dc318e2b" kind="enumvalue"><name>CUDA_KERNEL_TASK</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8a930dbba0e8f56b29ac3ea395017cec1f" kind="enumvalue"><name>CUDA_SUBFLOW_TASK</name></member>
    <member refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8a14e9fb7dc6b0d37a40046f685c6aa79a" kind="enumvalue"><name>CUDA_CAPTURE_TASK</name></member>
    <member refid="namespacetf_1a11fc9c98eb3a0d3a9aa55598b1f4d614" kind="variable"><name>is_static_task_v</name></member>
    <member refid="namespacetf_1a1eea7593f25ab348cfb656dbdf4e5b05" kind="variable"><name>is_dynamic_task_v</name></member>
    <member refid="namespacetf_1a00ca2fc2de0e679a7d9b8039340343df" kind="variable"><name>is_condition_task_v</name></member>
    <member refid="namespacetf_1adb8433555d8cdc0b3c5d95e8d51a90f0" kind="variable"><name>is_cudaflow_task_v</name></member>
    <member refid="namespacetf_1ab1887c186d5570390859f16705d79bf6" kind="function"><name>task_type_to_string</name></member>
    <member refid="namespacetf_1ad216aea4d0f648e149e47374ad015b1f" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="namespacetf_1a4eea58a9e7eab408c44378dbc2be4f43" kind="function"><name>observer_type_to_string</name></member>
    <member refid="namespacetf_1abffa70155a5f160b7ceb86ee52ab2136" kind="function"><name>cuda_get_num_devices</name></member>
    <member refid="namespacetf_1a235f5a9ce203d538eec1f4114221d473" kind="function"><name>cuda_get_device</name></member>
    <member refid="namespacetf_1ade2938289fa49aafc9b2b7b090deaa22" kind="function"><name>cuda_set_device</name></member>
    <member refid="namespacetf_1a403b679694f4c85c857163b47e84d566" kind="function"><name>cuda_get_device_property</name></member>
    <member refid="namespacetf_1a0e82b8a929e12349240276e34ec9f8c8" kind="function"><name>cuda_get_device_property</name></member>
    <member refid="namespacetf_1aff8073c78daa741df76b530a0e602287" kind="function"><name>cuda_dump_device_property</name></member>
    <member refid="namespacetf_1abf813f7ac4249d1b752d1b724f970deb" kind="function"><name>cuda_get_device_max_threads_per_block</name></member>
    <member refid="namespacetf_1af8184bb128c446fe383315f3dc15acf6" kind="function"><name>cuda_get_device_max_x_dim_per_block</name></member>
    <member refid="namespacetf_1a9aba5f29135b9da29015c2a367ab1d70" kind="function"><name>cuda_get_device_max_y_dim_per_block</name></member>
    <member refid="namespacetf_1a5580f59e633625b2f344bbf477d17c2f" kind="function"><name>cuda_get_device_max_z_dim_per_block</name></member>
    <member refid="namespacetf_1a597579c8a9ab31244418e30a5aa74491" kind="function"><name>cuda_get_device_max_x_dim_per_grid</name></member>
    <member refid="namespacetf_1a91d5c1609a7542949dd56d08b7c4c645" kind="function"><name>cuda_get_device_max_y_dim_per_grid</name></member>
    <member refid="namespacetf_1a0373e32a20c7fc90c4f0461ee41bb918" kind="function"><name>cuda_get_device_max_z_dim_per_grid</name></member>
    <member refid="namespacetf_1aeca46ac171c4941a75aafddfe7546bfa" kind="function"><name>cuda_get_device_max_shm_per_block</name></member>
    <member refid="namespacetf_1aea1b2af1073496f047d6fb9984cff4f1" kind="function"><name>cuda_get_device_warp_size</name></member>
    <member refid="namespacetf_1a1fb03793a6b8705026b80ef87599d4d5" kind="function"><name>cuda_get_device_compute_capability_major</name></member>
    <member refid="namespacetf_1a71f5177665f4f7e18984ccc57d625602" kind="function"><name>cuda_get_device_compute_capability_minor</name></member>
    <member refid="namespacetf_1ad389294b4d1c14219d8d098f796e27c5" kind="function"><name>cuda_get_device_unified_addressing</name></member>
    <member refid="namespacetf_1a43ac57f0eca3aa83c04bec3c4da9ab82" kind="function"><name>cuda_get_driver_version</name></member>
    <member refid="namespacetf_1a31258ad089c6f847c8cd636cd72d6949" kind="function"><name>cuda_get_runtime_version</name></member>
    <member refid="namespacetf_1a1effcf929b7e488925f9e12d74c8c62b" kind="function"><name>cuda_get_free_mem</name></member>
    <member refid="namespacetf_1a58bbc8d5d955582d6b5f7fdac51d010b" kind="function"><name>cuda_get_total_mem</name></member>
    <member refid="namespacetf_1a6f04fd3168c45eeb2dffb223e5c81e45" kind="function"><name>cuda_malloc_device</name></member>
    <member refid="namespacetf_1ab9b68b8f4336f13b190d573969cb1cf7" kind="function"><name>cuda_malloc_device</name></member>
    <member refid="namespacetf_1a8eed05685b030fc44703213a4ef86f11" kind="function"><name>cuda_malloc_shared</name></member>
    <member refid="namespacetf_1ac7a8fe7456b888d6072ba94783c5003c" kind="function"><name>cuda_free</name></member>
    <member refid="namespacetf_1ae174a3a49b91ef21554dac16806f0d72" kind="function"><name>cuda_free</name></member>
    <member refid="namespacetf_1aa4266474b921f8ed7d9ec8071fded2a4" kind="function"><name>cuda_memcpy_async</name></member>
    <member refid="namespacetf_1a6615554d2954e895755411ee444d9760" kind="function"><name>cuda_memset_async</name></member>
    <member refid="namespacetf_1a0fa601969d45f5bb37fea586fa98fd2a" kind="function"><name>cuda_task_type_to_string</name></member>
    <member refid="namespacetf_1a9cca69f61d792afb3ad501b703d795c1" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="namespacetf_1ae680bf7822f2b6b66a6199f0b77f7241" kind="function"><name>cuda_default_max_threads_per_block</name></member>
    <member refid="namespacetf_1a50a8f777333cc26d5f5d8c4d37bcdc73" kind="function"><name>cuda_default_threads_per_block</name></member>
    <member refid="namespacetf_1a30fa078dcf625e9eada5a95af1467588" kind="function"><name>version</name></member>
  </compound>
  <compound refid="algorithms_8dox" kind="file"><name>algorithms.dox</name>
  </compound>
  <compound refid="async__tasking_8dox" kind="file"><name>async_tasking.dox</name>
  </compound>
  <compound refid="benchmark__taskflow_8dox" kind="file"><name>benchmark_taskflow.dox</name>
  </compound>
  <compound refid="codeofconduct_8dox" kind="file"><name>codeofconduct.dox</name>
  </compound>
  <compound refid="composable__tasking_8dox" kind="file"><name>composable_tasking.dox</name>
  </compound>
  <compound refid="conditional__tasking_8dox" kind="file"><name>conditional_tasking.dox</name>
  </compound>
  <compound refid="contributing_8dox" kind="file"><name>contributing.dox</name>
  </compound>
  <compound refid="contributors_8dox" kind="file"><name>contributors.dox</name>
  </compound>
  <compound refid="Cookbook_8dox" kind="file"><name>Cookbook.dox</name>
  </compound>
  <compound refid="critical_8hpp" kind="file"><name>critical.hpp</name>
  </compound>
  <compound refid="cublas__flow_8hpp" kind="file"><name>cublas_flow.hpp</name>
  </compound>
  <compound refid="cublas__flow__capturer_8dox" kind="file"><name>cublas_flow_capturer.dox</name>
  </compound>
  <compound refid="cublasflow_8hpp" kind="file"><name>cublasflow.hpp</name>
  </compound>
  <compound refid="cuda__capturer_8hpp" kind="file"><name>cuda_capturer.hpp</name>
  </compound>
  <compound refid="cuda__compile_8dox" kind="file"><name>cuda_compile.dox</name>
  </compound>
  <compound refid="cuda__device_8hpp" kind="file"><name>cuda_device.hpp</name>
  </compound>
  <compound refid="cuda__flow_8hpp" kind="file"><name>cuda_flow.hpp</name>
  </compound>
  <compound refid="cuda__memory_8hpp" kind="file"><name>cuda_memory.hpp</name>
  </compound>
  <compound refid="cuda__reduce_8dox" kind="file"><name>cuda_reduce.dox</name>
  </compound>
  <compound refid="cuda__task_8hpp" kind="file"><name>cuda_task.hpp</name>
  </compound>
  <compound refid="cudaflow_8hpp" kind="file"><name>cudaflow.hpp</name>
  </compound>
  <compound refid="dreamplace_8dox" kind="file"><name>dreamplace.dox</name>
  </compound>
  <compound refid="dynamic__tasking_8dox" kind="file"><name>dynamic_tasking.dox</name>
  </compound>
  <compound refid="examples_8dox" kind="file"><name>examples.dox</name>
  </compound>
  <compound refid="executor_8dox" kind="file"><name>executor.dox</name>
  </compound>
  <compound refid="executor_8hpp" kind="file"><name>executor.hpp</name>
  </compound>
  <compound refid="FAQ_8dox" kind="file"><name>FAQ.dox</name>
  </compound>
  <compound refid="fibonacci_8dox" kind="file"><name>fibonacci.dox</name>
  </compound>
  <compound refid="flipcoins_8dox" kind="file"><name>flipcoins.dox</name>
  </compound>
  <compound refid="flow__builder_8hpp" kind="file"><name>flow_builder.hpp</name>
  </compound>
  <compound refid="for__each_8dox" kind="file"><name>for_each.dox</name>
  </compound>
  <compound refid="for__each__cuda_8dox" kind="file"><name>for_each_cuda.dox</name>
  </compound>
  <compound refid="governance_8dox" kind="file"><name>governance.dox</name>
  </compound>
  <compound refid="gpu__algorithms_8dox" kind="file"><name>gpu_algorithms.dox</name>
  </compound>
  <compound refid="gpu__tasking__cudaflow_8dox" kind="file"><name>gpu_tasking_cudaflow.dox</name>
  </compound>
  <compound refid="gpu__tasking__cudaflow__capturer_8dox" kind="file"><name>gpu_tasking_cudaflow_capturer.dox</name>
  </compound>
  <compound refid="graph__traversal_8dox" kind="file"><name>graph_traversal.dox</name>
  </compound>
  <compound refid="guidelines_8dox" kind="file"><name>guidelines.dox</name>
  </compound>
  <compound refid="header_8html" kind="file"><name>header.html</name>
  </compound>
  <compound refid="install_8dox" kind="file"><name>install.dox</name>
  </compound>
  <compound refid="kmeans_8dox" kind="file"><name>kmeans.dox</name>
  </compound>
  <compound refid="matrix__multiplication_8dox" kind="file"><name>matrix_multiplication.dox</name>
  </compound>
  <compound refid="motivation_8dox" kind="file"><name>motivation.dox</name>
  </compound>
  <compound refid="observer_8hpp" kind="file"><name>observer.hpp</name>
  </compound>
  <compound refid="opentimer_8dox" kind="file"><name>opentimer.dox</name>
  </compound>
  <compound refid="QuickStart_8dox" kind="file"><name>QuickStart.dox</name>
  </compound>
  <compound refid="reduce_8dox" kind="file"><name>reduce.dox</name>
  </compound>
  <compound refid="references_8dox" kind="file"><name>references.dox</name>
  </compound>
  <compound refid="release-1_8x_8x_8dox" kind="file"><name>release-1.x.x.dox</name>
  </compound>
  <compound refid="release-2_80_80_8dox" kind="file"><name>release-2.0.0.dox</name>
  </compound>
  <compound refid="release-2_81_80_8dox" kind="file"><name>release-2.1.0.dox</name>
  </compound>
  <compound refid="release-2_82_80_8dox" kind="file"><name>release-2.2.0.dox</name>
  </compound>
  <compound refid="release-2_83_80_8dox" kind="file"><name>release-2.3.0.dox</name>
  </compound>
  <compound refid="release-2_83_81_8dox" kind="file"><name>release-2.3.1.dox</name>
  </compound>
  <compound refid="release-2_84_80_8dox" kind="file"><name>release-2.4.0.dox</name>
  </compound>
  <compound refid="release-2_85_80_8dox" kind="file"><name>release-2.5.0.dox</name>
  </compound>
  <compound refid="release-2_86_80_8dox" kind="file"><name>release-2.6.0.dox</name>
  </compound>
  <compound refid="release-2_87_80_8dox" kind="file"><name>release-2.7.0.dox</name>
  </compound>
  <compound refid="release-3_80_80_8dox" kind="file"><name>release-3.0.0.dox</name>
  </compound>
  <compound refid="release-roadmap_8dox" kind="file"><name>release-roadmap.dox</name>
  </compound>
  <compound refid="releases_8dox" kind="file"><name>releases.dox</name>
  </compound>
  <compound refid="rules_8dox" kind="file"><name>rules.dox</name>
  </compound>
  <compound refid="semaphore_8dox" kind="file"><name>semaphore.dox</name>
  </compound>
  <compound refid="semaphore_8hpp" kind="file"><name>semaphore.hpp</name>
  </compound>
  <compound refid="single__task__cuda_8dox" kind="file"><name>single_task_cuda.dox</name>
  </compound>
  <compound refid="sort_8dox" kind="file"><name>sort.dox</name>
  </compound>
  <compound refid="static__tasking_8dox" kind="file"><name>static_tasking.dox</name>
  </compound>
  <compound refid="task_8hpp" kind="file"><name>task.hpp</name>
  </compound>
  <compound refid="core_2taskflow_8hpp" kind="file"><name>core/taskflow.hpp</name>
  </compound>
  <compound refid="taskflow_8hpp" kind="file"><name>taskflow.hpp</name>
  </compound>
  <compound refid="team_8dox" kind="file"><name>team.dox</name>
  </compound>
  <compound refid="transform__cuda_8dox" kind="file"><name>transform_cuda.dox</name>
  </compound>
  <compound refid="usecases_8dox" kind="file"><name>usecases.dox</name>
  </compound>
  <compound refid="wavefront_8dox" kind="file"><name>wavefront.dox</name>
  </compound>
  <compound refid="worker_8hpp" kind="file"><name>worker.hpp</name>
  </compound>
  <compound refid="Releases" kind="page"><name>Releases</name>
  </compound>
  <compound refid="release-roadmap" kind="page"><name>release-roadmap</name>
  </compound>
  <compound refid="release-3-0-0" kind="page"><name>release-3-0-0</name>
  </compound>
  <compound refid="release-2-7-0" kind="page"><name>release-2-7-0</name>
  </compound>
  <compound refid="release-2-6-0" kind="page"><name>release-2-6-0</name>
  </compound>
  <compound refid="release-2-5-0" kind="page"><name>release-2-5-0</name>
  </compound>
  <compound refid="release-2-4-0" kind="page"><name>release-2-4-0</name>
  </compound>
  <compound refid="release-2-3-1" kind="page"><name>release-2-3-1</name>
  </compound>
  <compound refid="release-2-3-0" kind="page"><name>release-2-3-0</name>
  </compound>
  <compound refid="release-2-2-0" kind="page"><name>release-2-2-0</name>
  </compound>
  <compound refid="release-2-1-0" kind="page"><name>release-2-1-0</name>
  </compound>
  <compound refid="release-2-0-0" kind="page"><name>release-2-0-0</name>
  </compound>
  <compound refid="release-1-x-x" kind="page"><name>release-1-x-x</name>
  </compound>
  <compound refid="install" kind="page"><name>install</name>
  </compound>
  <compound refid="CompileTaskflowWithCUDA" kind="page"><name>CompileTaskflowWithCUDA</name>
  </compound>
  <compound refid="BenchmarkTaskflow" kind="page"><name>BenchmarkTaskflow</name>
  </compound>
  <compound refid="Cookbook" kind="page"><name>Cookbook</name>
  </compound>
  <compound refid="chapter0" kind="page"><name>chapter0</name>
  </compound>
  <compound refid="chapter1" kind="page"><name>chapter1</name>
  </compound>
  <compound refid="chapter2" kind="page"><name>chapter2</name>
  </compound>
  <compound refid="chapter3" kind="page"><name>chapter3</name>
  </compound>
  <compound refid="chapter4" kind="page"><name>chapter4</name>
  </compound>
  <compound refid="chapter5" kind="page"><name>chapter5</name>
  </compound>
  <compound refid="LimitTheMaximumConcurrency" kind="page"><name>LimitTheMaximumConcurrency</name>
  </compound>
  <compound refid="AsyncTasking" kind="page"><name>AsyncTasking</name>
  </compound>
  <compound refid="GPUTaskingcudaFlow" kind="page"><name>GPUTaskingcudaFlow</name>
  </compound>
  <compound refid="GPUTaskingcudaFlowCapturer" kind="page"><name>GPUTaskingcudaFlowCapturer</name>
  </compound>
  <compound refid="Algorithms" kind="page"><name>Algorithms</name>
  </compound>
  <compound refid="A1ForEach" kind="page"><name>A1ForEach</name>
  </compound>
  <compound refid="A2Reduce" kind="page"><name>A2Reduce</name>
  </compound>
  <compound refid="ParallelSort" kind="page"><name>ParallelSort</name>
  </compound>
  <compound refid="GPUAlgorithms" kind="page"><name>GPUAlgorithms</name>
  </compound>
  <compound refid="SingleTaskCUDA" kind="page"><name>SingleTaskCUDA</name>
  </compound>
  <compound refid="ForEachCUDA" kind="page"><name>ForEachCUDA</name>
  </compound>
  <compound refid="ParallelTransformsCUDA" kind="page"><name>ParallelTransformsCUDA</name>
  </compound>
  <compound refid="CUDAReduce" kind="page"><name>CUDAReduce</name>
  </compound>
  <compound refid="LinearAlgebracublasFlowCapturer" kind="page"><name>LinearAlgebracublasFlowCapturer</name>
  </compound>
  <compound refid="Examples" kind="page"><name>Examples</name>
  </compound>
  <compound refid="wavefront" kind="page"><name>wavefront</name>
  </compound>
  <compound refid="matrix_multiplication" kind="page"><name>matrix_multiplication</name>
  </compound>
  <compound refid="fibonacci" kind="page"><name>fibonacci</name>
  </compound>
  <compound refid="kmeans" kind="page"><name>kmeans</name>
  </compound>
  <compound refid="flipcoins" kind="page"><name>flipcoins</name>
  </compound>
  <compound refid="graphtraversal" kind="page"><name>graphtraversal</name>
  </compound>
  <compound refid="usecases" kind="page"><name>usecases</name>
  </compound>
  <compound refid="opentimer" kind="page"><name>opentimer</name>
  </compound>
  <compound refid="dreamplace" kind="page"><name>dreamplace</name>
  </compound>
  <compound refid="Contributing" kind="page"><name>Contributing</name>
  </compound>
  <compound refid="guidelines" kind="page"><name>guidelines</name>
  </compound>
  <compound refid="contributors" kind="page"><name>contributors</name>
  </compound>
  <compound refid="Governance" kind="page"><name>Governance</name>
  </compound>
  <compound refid="rules" kind="page"><name>rules</name>
  </compound>
  <compound refid="team" kind="page"><name>team</name>
  </compound>
  <compound refid="codeofconduct" kind="page"><name>codeofconduct</name>
  </compound>
  <compound refid="FAQ" kind="page"><name>FAQ</name>
  </compound>
  <compound refid="References" kind="page"><name>References</name>
  </compound>
  <compound refid="dir_6ca04c2d47d1a3b7e60c2f1c28fb8440" kind="dir"><name>algorithm</name>
  </compound>
  <compound refid="dir_73635165b734e23094c358e517ec45fc" kind="dir"><name>algorithms</name>
  </compound>
  <compound refid="dir_ecfa7d70310a08b350e190615cc70712" kind="dir"><name>contributing</name>
  </compound>
  <compound refid="dir_61bd9e18b52c497a2e6d3af3a72c0d02" kind="dir"><name>cookbook</name>
  </compound>
  <compound refid="dir_220cd4d9b8cb38c840b455d5d75c25bb" kind="dir"><name>core</name>
  </compound>
  <compound refid="dir_17d5535b0ea413f2e7c8668276eab781" kind="dir"><name>cublas</name>
  </compound>
  <compound refid="dir_6826fcd91b6c20b635c7529d8da8ba89" kind="dir"><name>cublas</name>
  </compound>
  <compound refid="dir_638d51f8e6f20ea8c720cc8c006296ba" kind="dir"><name>cuda</name>
  </compound>
  <compound refid="dir_0c6655e7a474ec7aa2f43d8d56b9e1c1" kind="dir"><name>examples</name>
  </compound>
  <compound refid="dir_87abf3142b2bf0ff331672dc90c991b0" kind="dir"><name>governance</name>
  </compound>
  <compound refid="dir_66eab6e74be8ecc93fa9a6dc28be8ee1" kind="dir"><name>gpu_algorithms</name>
  </compound>
  <compound refid="dir_13901390c6d5ee592c18c2f167e01d4f" kind="dir"><name>install</name>
  </compound>
  <compound refid="dir_d7a9e4fcc659571fb4c113eec28c5eeb" kind="dir"><name>references</name>
  </compound>
  <compound refid="dir_7c512093e4879e21c0dd502d7d593a16" kind="dir"><name>releases</name>
  </compound>
  <compound refid="dir_88dad41ea55ca2177e141d32a93e931c" kind="dir"><name>taskflow</name>
  </compound>
  <compound refid="dir_183ade9c70bd4384e3037d383160f942" kind="dir"><name>usecases</name>
  </compound>
  <compound refid="indexpage" kind="page"><name>index</name>
  </compound>
</doxygenindex>
