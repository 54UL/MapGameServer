<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classtf_1_1cudaTask" kind="class" language="C++" prot="public">
    <compoundname>tf::cudaTask</compoundname>
    <includes refid="cuda__task_8hpp" local="no">cuda_task.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtf_1_1cudaTask_1a9f64f729511a922781a59663ff1c6250" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cudaFlow</definition>
        <argsstring></argsstring>
        <name>cudaFlow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="58" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1a672b45d300c57d726c203c62f950efbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cudaFlowCapturer</definition>
        <argsstring></argsstring>
        <name>cudaFlowCapturer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="59" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1a8a72366cffc8beb57fb68b1591df56e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cudaFlowCapturerBase</definition>
        <argsstring></argsstring>
        <name>cudaFlowCapturerBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="60" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1aa48fa98a827ff71f8c3845a29f5e4d10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const cudaTask &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
          <defname>ct</defname>
        </param>
        <briefdescription>
<para>overload of ostream inserter operator for <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="62" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="210" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1cudaTask_1a7f77a40228b96cba9191c43ac6d851ad" prot="private" static="no" mutable="no">
        <type>cudaNode *</type>
        <definition>cudaNode* tf::cudaTask::_node</definition>
        <argsstring></argsstring>
        <name>_node</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="147" column="14" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1cudaTask_1a68942b759c0420da99b639a8de3cc3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaTask::cudaTask</definition>
        <argsstring>()=default</argsstring>
        <name>cudaTask</name>
        <briefdescription>
<para>constructs an empty <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a367cf46c1ea828de4502a2ddc805c094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaTask::cudaTask</definition>
        <argsstring>(const cudaTask &amp;)=default</argsstring>
        <name>cudaTask</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        </param>
        <briefdescription>
<para>copy-constructs a <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="74" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1af17c570ca9a43ad71c4b626635ea9cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        <definition>cudaTask&amp; tf::cudaTask::operator=</definition>
        <argsstring>(const cudaTask &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        </param>
        <briefdescription>
<para>copy-assigns a <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="79" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1abdd68287ec4dff4216af34d1db44d1b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        <definition>cudaTask &amp; tf::cudaTask::precede</definition>
        <argsstring>(Ts &amp;&amp;... tasks)</argsstring>
        <name>precede</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>tasks</declname>
        </param>
        <briefdescription>
<para>adds precedence links from this to other tasks </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Ts</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter pack</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tasks</parametername>
</parameternamelist>
<parameterdescription>
<para>one or multiple tasks</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>*this</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="91" column="14" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a4a9ca1a34bac47e4c9b04eb4fb2f7775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        <definition>cudaTask &amp; tf::cudaTask::succeed</definition>
        <argsstring>(Ts &amp;&amp;... tasks)</argsstring>
        <name>succeed</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>tasks</declname>
        </param>
        <briefdescription>
<para>adds precedence links from other tasks to this </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Ts</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter pack</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tasks</parametername>
</parameternamelist>
<parameterdescription>
<para>one or multiple tasks</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>*this</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="103" column="14" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1ab81b4f71a44af8d61758524f0c274962" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        <definition>cudaTask &amp; tf::cudaTask::name</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>name</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>assigns a name to the task </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ulink url="https://en.cppreference.com/w/cpp/string/basic_string">std::string</ulink> acceptable string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>*this</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="112" column="14" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1aa80fb7a06b2828bd95c43fb465e10abe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        <definition>const std::string &amp; tf::cudaTask::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
<para>queries the name of the task </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="117" column="23" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a581673ad83a48a2d3b4f06f125043c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::cudaTask::num_successors</definition>
        <argsstring>() const</argsstring>
        <name>num_successors</name>
        <briefdescription>
<para>queries the number of successors </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="122" column="12" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a1b0da9e643b80008063406fe1bf207b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tf::cudaTask::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>queries if the task is associated with a cudaNode </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="127" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a7eab02ec6633a5cf17cc15898db2d648" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetf_1ac747e6c7cf88c7b1ff7126e62babebb8" kindref="member">cudaTaskType</ref></type>
        <definition>cudaTaskType tf::cudaTask::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
<para>queries the task type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="132" column="18" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1af2ce580b0bfb771e463e66af64c2c571" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tf::cudaTask::dump</definition>
        <argsstring>(T &amp;ostream) const</argsstring>
        <name>dump</name>
        <param>
          <type>T &amp;</type>
          <declname>ostream</declname>
        </param>
        <briefdescription>
<para>dumps the task through an output stream </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream type with insertion operator (&lt;&lt;) defined </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ostream</parametername>
</parameternamelist>
<parameterdescription>
<para>an output stream target </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="141" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="196" bodyend="201"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtf_1_1cudaTask_1ada121035cb622722915be0cc860c9b29" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaTask::cudaTask</definition>
        <argsstring>(cudaNode *)</argsstring>
        <name>cudaTask</name>
        <param>
          <type>cudaNode *</type>
          <defname>node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="145" column="5" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="151" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>handle to a node of the internal CUDA graph </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" line="56" column="1" bodyfile="/Users/twhuang/Code/taskflow/taskflow/cuda/cuda_task.hpp" bodystart="56" bodyend="148"/>
    <listofallmembers>
      <member refid="classtf_1_1cudaTask_1a7f77a40228b96cba9191c43ac6d851ad" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>_node</name></member>
      <member refid="classtf_1_1cudaTask_1a9f64f729511a922781a59663ff1c6250" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaFlow</name></member>
      <member refid="classtf_1_1cudaTask_1a672b45d300c57d726c203c62f950efbd" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaFlowCapturer</name></member>
      <member refid="classtf_1_1cudaTask_1a8a72366cffc8beb57fb68b1591df56e4" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaFlowCapturerBase</name></member>
      <member refid="classtf_1_1cudaTask_1a68942b759c0420da99b639a8de3cc3d1" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaTask</name></member>
      <member refid="classtf_1_1cudaTask_1a367cf46c1ea828de4502a2ddc805c094" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaTask</name></member>
      <member refid="classtf_1_1cudaTask_1ada121035cb622722915be0cc860c9b29" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaTask</name></member>
      <member refid="classtf_1_1cudaTask_1af2ce580b0bfb771e463e66af64c2c571" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>dump</name></member>
      <member refid="classtf_1_1cudaTask_1a1b0da9e643b80008063406fe1bf207b9" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>empty</name></member>
      <member refid="classtf_1_1cudaTask_1ab81b4f71a44af8d61758524f0c274962" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>name</name></member>
      <member refid="classtf_1_1cudaTask_1aa80fb7a06b2828bd95c43fb465e10abe" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>name</name></member>
      <member refid="classtf_1_1cudaTask_1a581673ad83a48a2d3b4f06f125043c32" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>num_successors</name></member>
      <member refid="classtf_1_1cudaTask_1aa48fa98a827ff71f8c3845a29f5e4d10" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>operator&lt;&lt;</name></member>
      <member refid="classtf_1_1cudaTask_1af17c570ca9a43ad71c4b626635ea9cbb" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaTask_1abdd68287ec4dff4216af34d1db44d1b4" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>precede</name></member>
      <member refid="classtf_1_1cudaTask_1a4a9ca1a34bac47e4c9b04eb4fb2f7775" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>succeed</name></member>
      <member refid="classtf_1_1cudaTask_1a7eab02ec6633a5cf17cc15898db2d648" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
