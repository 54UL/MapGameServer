-------------------------------------------------------------- V0.8B CURRENT
-Add array type   DONE
-Add string type  DONE
-Add float type   DONE 
-Add int type     DONE

-Implement serialization in the server DONE

-Implement serialization in the c# client
    * Implement as external c# dll module (Map logic and serialization) DONE
    * BinaryUtils and typeInterface in c# DONE
    * Implement all types interfaces DONE
    * Implement static array for c# and cpp     DONE
    * Implement serialization in c# server client DONE

-Improve testing lib (add stages and verbose info for tests) c# and c++ DONE

-rework c++ server code <------------------------------------------------------------ ON PROGRESS
    *Consolidate MAP architecture design (partial implementation of SOLID)
        *Serialization api             -- DONE
                *Binary serialization  -- PARTIAL
                *Json serialization    -- PARTIAL

        *NetworkTransport api(this to use asio or steamNetworking) -- PARTIAL
            *Handshake feature
            *Client pool
            *NET AUTH(TO BE IMPLEMENTED)
            *Reliable message or unreliable modes
                *ASIO upd sockets
                *Steam networking sockets (OPTIONAL DUE COMPLEXITY)

        *Command api -- PARTIAL
            * MAP default commands (v1.0 command spec)
            * DB commands
            * Chat commands
            * Auth commands

        *Implement c++ client -- TODO
            *
        *Implement c# client -- TODO

        *Implement tests  -- TODO

        *Server API 
            *Event hooks
                *server state 
                *custom hooks (optional)

        *Implement benchmarking,logger and config utils
            *Cpp (ping,packet loss,etc)


-Create networking tests in c# client and c++ in his actual state
    * (FIX SERIALIZATION LIB BUG IN C#)
    *C#  map client unit tests(own test system)
    *C++ map server unit tests(gtests)

-rework c# client to meet cpp server specs.

-Unity 3D project:
    *Decouple networking scripts from DAC (c#)
    *Server lobby UI 
    *Car demo (PORT)
    *Network physics demo (TODO)  
    *FPS demo (OPTIONAL)

-Implement benchmarking and logger
    *c#(Unity3D) (ping,packet loss,etc)

-Implement client/server synchronization:
    *timeline
        *dead reckoning (priority)
        *delay    (default)
        *rollback (optional)
            
-Serializer lib todos:
    * Implement endianness detection 
    * Server

-------------------------------------------------------------- V0.9B
-Implement all remaining server commands with clustered map pools
    *Implement in c# and c++

-MAP Commands Extensions
    *Implement chat system
    *Implement basic mongo db features in the game server commands

-------------------------------------------------------------- V1.0B
-Server auth token(non specific algorithm)
-Server ACL
-Data encryption (non specific algorithm)
-------------------------------------------------------------- V1.1B
-Implement godot client
-Implement unreal client